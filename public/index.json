[{"content":"March #\rRomantic Classics with the RTÉ Concert Orchestra #\rMarch 6th National Concert Hall\nAlim Beisembayev conducted by Kerem Hasan\nRossini - William Tell Overture Sergei Rachmaninov - Piano Concerto No. 2 in C Minor Edward Elgar - Enigma Variations Evil does not Exist #\rWritten and directed by Ryusuke Hamaguchi.\nJoseph Walsh Talk #\rApril 21st in the National Gallery.\nWalsh has designed a number of amazing art and furniture pieces.\nA bed he designed for Chatsworth house in England gave rise to a running joke. Guests would come downstairs for breakfast and declare \u0026ldquo;I slept in Joseph\u0026rsquo;s bed last night.\u0026rdquo;\nJoseph Walsh is a woodworker and artist based in County Cork.\nApril #\rAkihiko Okamura - The Memories of Others #\rAn exhibition opening in the Photo Museum Ireland showcasing pictures of Ireland taken by a Japanese photographer. He photographed scenes from the Troubles in Northern Ireland.\nWrite up by The Guardian ","date":"5 February 2024","permalink":"/journal/2024/","section":"Journal","summary":"Joseph Walsh lecture, Evil does not exist","title":"Spring 2024"},{"content":"\rGirl, woman, other by Evaristo, Bernardine\nThe quiet revolution of Caroline Herschel : the lost heroine of astronomy by Winterburn, Emily\nWe, robots / Anthology The crash detectives : investigating the world\u0026rsquo;s most mysterious air disasters / Negroni, Christine The artist\u0026rsquo;s way : a spiritual path to higher creativity / Cameron, Julia My ainsel / Gaiman, Neil The Neil Gaiman reader : selected fiction / Gaiman, Neil Selling Hitler / Harris, Robert The anomaly / Le Tellier, Hervé Neuromancer / Gibson, William Termination shock / Stephenson, Neal The quiet revolution of Caroline Herschel : the lost heroine of astronomy / Winterburn, Emily Dublin\u0026rsquo;s strangest tales : extraordinary but true stories : a very curious history / Barry, Michael Girl, woman, other / Evaristo, Bernardine ","date":"1 November 2023","permalink":"/journal/2023/","section":"Journal","summary":"Girl, woman, other and The quiet revolution of Caroline Herschel.","title":"2023"},{"content":"StrangeCharacters.com #\rBlogging about what I\u0026rsquo;m working on.\nSince most of my projects will be websites it made sense to start with one. Skills learned here will be useful for building other sites.\nI also wanted to get into the habit of documenting things as I go, in the spirit of leaving breadcrumbs for myself. Writing about what I\u0026rsquo;m doing helps me remember details and lets me practice passing on information to readers.\n","date":"30 May 2023","permalink":"/projects/","section":"Strange Characters","summary":"","title":"Projects"},{"content":"Make it smaller than that.\nNo, even smaller.\nIt doesn\u0026rsquo;t matter what method you use, software or notebook, audio message or knot in your handkerchief. What\u0026rsquo;s important is the item itself.\nFor me it has to be small.\ntiny.\nAs someone with a lifetime award for procrastination, if I feel resistance to doing a task I will do something else. Anything else.\nOne of the best ways to make a task palatable is to make it smaller.\nBake a tart that causes a food critic to have an emotional flashback to his grandmother\u0026rsquo;s cooking. I\u0026rsquo;m not the kind of person that can do that\nLet\u0026rsquo;s try making a delicious pear and almond tart\nLike, in a patisserie? Are you crazy?\nPoach peeled and cored pears in a flavoured syrup If I get this wrong it\u0026rsquo;ll ruin the whole thing\nMix a velevety light frangipane I don\u0026rsquo;t have a clue what I\u0026rsquo;m doing\nCreate a buttery shortcrust pastry I\u0026rsquo;ve actually made pastry before but this is too much, there\u0026rsquo;s judgement in every task\nIf I\u0026rsquo;m scared of being judged I definitely don\u0026rsquo;t want to have it baked-in to the task itself.\nLet\u0026rsquo;s make it a little easier on ourselves.\nTasks that are binary, are much less scary. They are either done or not done.\nYou don\u0026rsquo;t have to wait and see whether or not Gordon is going to scream at you.\nPut all of the ingredients for pastry on the kitchen counter. That\u0026rsquo;s not so bad, I can\u0026rsquo;t really get that wrong\nWeigh 2 cups of flour into a mixing bowl. It says cups! I don\u0026rsquo;t have a measuring cup. I\u0026rsquo;m failing again\nEven though it seems trivial we\u0026rsquo;re still having an emotional response to this task.\nDeep breath. Break it down.\nGoogle a conversion from cups to grams.\nConvert to the measurement we need.\nWeigh the flour into a mixing bowl.\nCreate a task that doesn\u0026rsquo;t have some subjective requirement in it.\nWhat\u0026rsquo;s the intimidating part? Why am I putting this off?\nAn example:\nWhen writing breadcrumbs I added an item\nsave a copy of an image and link to the creator\u0026rsquo;s site in the caption. A small, simple task. At the end of the day I didn\u0026rsquo;t get it done so I moved it to the next day\u0026rsquo;s list. And then I didn\u0026rsquo;t do it.\nagain.\nMoving it to the top of the next day\u0026rsquo;s list I thought - I\u0026rsquo;ve completed other tasks and even added new ones. why is this task difficult?\nIn my head, linking to someone else\u0026rsquo;s site made me compare my work to theirs. ( and I really like their work ) A tiny task was making me feel inexperienced and inadequate. It feels silly to even admit to this but that was why I hadn\u0026rsquo;t done it.\nSo, smaller.\nI wrote out separate tasks for saving the file, renaming the file, adding the file to the article and finally adding the caption to the article. And these tasks? none of them were big or intimidating enough to make me skip them.\nI had taken\nThere are people with much better websites than mine\nand turned it into easy steps that were easy to accomplish.\nSmall steps and even smaller todo lists.\n","date":"17 May 2023","permalink":"/articles/smallest-todo-list/","section":"Articles","summary":"","title":"Smallest Todo List"},{"content":"I think I\u0026rsquo;m going to be talking about procrastination quite often. It\u0026rsquo;s been the bane of my life for a long time now.\nIf I\u0026rsquo;m going to leave things unfinished or interrupt myself I need to find a way to restart.\nI\u0026rsquo;m trying to leave a trail of breadcrumbs that can get me back on track.\nThese make it easier to recover from getting sidetracked.\nby Kate Beaton on Hark! A Vagrant\rBreadcrumbs #\rI have a gratitude journal listing things I\u0026rsquo;ve done and things I\u0026rsquo;m grateful for every day. I am very self critical and filling this in has helped me develop the habit of thinking about the positives. I leave the journal next to my bed and write just before I sleep, which helps avoid ruminating and keeping me awake.\nI use logseq for taking notes and brainstorming on the pc. I prefer the feel of writing ideas onto paper but logseq is great for taking notes from pdfs and youtube videos. I send emails to myself. I like things on twitter that I might want to revisit My browser history or the plethora of open tabs that stretch into the distance I have a whiteboard in my office that I sometimes leave messages on If I\u0026rsquo;m reading a book that I want to refer back to I stick small post-its on the relevant page Sometimes I just take a picture of something with my phone, all pics get uploaded to google photos automatically. If I was writing more code ( and I\u0026rsquo;d like to be doing that ) I could also use github as a history of work done. Hopefully with meaningful commit messages.\nBullet Journaling is the main way for me to list my tasks and work through them during the day. I don\u0026rsquo;t decorate or do anything complicated with it, it\u0026rsquo;s a form of short-term memory on paper. ","date":"20 March 2023","permalink":"/articles/aw-yiss-breadcrumbs/","section":"Articles","summary":"","title":"Aw Yiss, Breadcrumbs"},{"content":"\rAn Irish Atlantic rainforest by Eoghan Daltun\nAllowing land to return to its natural state on the west coast of Ireland.\nAn Irish Atlantic rainforest : a personal journey into the magic of rewilding / Daltun, Eoghan In praise of walking : the new science of how we walk and why it\u0026rsquo;s good for us / O\u0026rsquo;Mara, Shane Sketching : drawing techniques for product designers / Eissen, Koos Dull Margaret / Broadbent, Jim How to avoid a climate disaster : the solutions we have and the breakthroughs we need / Gates, Bill The supernova era / Liu, Cixin The table maker : a carpenter\u0026rsquo;s guide to life / Bird, Joel Build your own : use what you have to create what you need / Gardner, Harrison The art of learning : a journey in the pursuit of excellence / Waitzkin, Josh Earthseed. Parable of the sower / Duffy, Damian Junk genius : stylish ways to repurpose everyday objects, with over 80 projects and ideas / Goggin, Juliette How to do the work : recognise your patterns, heal from your past, and create your self / LePera, Nicole The man from the future : the visionary life of John von Neumann / Bhattacharya, Ananyo ","date":"30 March 2022","permalink":"/journal/2022/","section":"Journal","summary":"An Irish Atlantic rainforest","title":"2022"},{"content":"Although Congo 2.0 contains a large number of changes, the theme has been designed to minimise the effort required to upgrade to the latest release.\nThat said, there are some changes that require adjustments to existing sites that are built with Congo version 1.x. This guide will step you through the process and highlight things you need to consider.\nStep 1: Upgrade Hugo #\rCongo 2.0 requires a minimum of Hugo v0.87.0 or later\rCongo is built to take advantage of some of the latest Hugo features. You should regularly keep your Hugo installation up to date to avoid any issues.\nYou can check your current version using the command hugo version. Visit the Hugo docs for information on obtaining a newer release for your platform.\nStep 2: Upgrade Congo #\rThe process for upgrading Congo will depend on how you include the theme in your project. Instructions for each method can be found below.\nUpgrade using Hugo Upgrade using git Upgrade manually Upgrade using Hugo #\rTo upgrade a go module to a new major release, the modules.toml and go.mod files need to be updated. In each file, update the path to the theme from github.com/jpanther/congo to github.com/jpanther/congo/v2.\nThen change into your project directory and execute the following command:\nhugo mod get -u Note that in some circumstances there may be issues with this step due to the way that Hugo locally caches modules. If the command above doesn\u0026rsquo;t work, try using hugo mod clean to clear out the local cache and re-download any modules.\nOnce the theme has been upgraded, continue to the next section.\nUpgrade using git #\rGit submodules can be upgraded using the git command. Simply execute the following command and the latest version of the theme will be downloaded into your local repository:\ngit submodule update --remote --merge Once the submodule has been upgraded, continue to the next section.\nUpgrade manually #\rUpdating Congo manually requires you to download the latest copy of the theme and replace the old version in your project.\nNote that any local customisations you have made to the theme files will be lost during this process.\rDownload the latest release of the theme source code.\nDownload from Github\rExtract the archive, rename the folder to congo and move it to the themes/ directory inside your Hugo project\u0026rsquo;s root folder. You will need to overwrite the existing directory to replace all the theme files.\nContinue to the next section.\nStep 3: Theme configuration #\rCongo 2.0 introduces a number of new theme configuration parameters. Although the theme will adapt to existing version 1 configurations, in order to take advantage of some of the newer theme features, you will need to adjust your existing configuration.\nThe simplest way to do this is to take a copy of the theme\u0026rsquo;s default configuration and compare it to your existing files. The process is outlined in greater detail below.\nLanguages.toml #\rIn order to provide multilingual support, language-specific theme parameters have been moved to a new config file languages.[lang-code].toml. The theme comes with a template languages.en.toml file which can be used as a guide.\nThis step is optional if you do not need multilingual support, although completing it now will make future theme upgrades easier.\rThe languages config file follows this structure:\n# config/_default/languagues.en.toml languageCode = \u0026#34;en\u0026#34; languageName = \u0026#34;English\u0026#34; displayName = \u0026#34;EN\u0026#34; htmlCode = \u0026#34;en\u0026#34; weight = 1 rtl = false # Language-specific parameters go here Using your preferred language, simply create this new file in config/_default/ and then move the language-specific parameters from any existing config files over to this new file. The table below outlines the parameters that need to be moved.\nParameter Old location title config.toml description params.toml copyright config.toml dateFormat params.toml [author] config.toml Once the values have been moved to the new location, these parameters should be deleted from their original locations.\nMenus.toml #\rAs the theme is now aware of languages, the menus.toml file should also be renamed to include a language code. Rename the existing menus.toml to menus.[lang-code].toml, where the language code matches the code used in the languages.toml file in the previous section.\nConfig.toml #\rThe config.toml file now only contains base Hugo configuration values. Other than removing the language-specific strings above, there are only two changes to consider.\nIf you\u0026rsquo;re using a language other than English, provide a defaultContentLanguage value that matches the language code in the config file you created for your language. Secondly, to take advange of the new site search in Congo 2.0, an [outputs] block needs to be provided.\n# config/_default/config.toml defaultContentLanguage = \u0026#34;en\u0026#34; enableRobotsTXT = true paginate = 10 summaryLength = 0 [outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Markup.toml #\rCongo 2.0 adds support for tables of contents on article pages. Although Hugo ships with default settings for generating contents listings, you can adjust this behaviour by adding a new [tableOfContents] block to your markup.toml file.\nThe recommended settings are as follows, which includes any headings in the Markdown content at levels 2, 3 and 4:\n# config/_default/markup.toml [tableOfContents] startLevel = 2 endLevel = 4 Params.toml #\rA number of new theme parameters have been introduced in Congo 2.0. Some minor changes are requried to existing configurations. Remember, the theme will always revert to a sensible default if a parameter is not provided.\nThe way that dark mode works in Congo has been changed to allow greater flexibility around configuration. The old darkMode and darkToggle parameters have been removed and replaced by three new parameters. These new options operate independently of each other, making it possible to force the appearance while still allowing the user to override.\nNew parameter Type Default Description defaultAppearance String \u0026quot;light\u0026quot; Default theme appearance; either light or dark.\n⚠️ Setting this to light replicates the old darkMode = false setting, while dark replicates darkMode = true. autoSwitchAppearance Boolean true Whether the theme appearance automatically switches based upon the operating system preference. Set to false to force the site to always use the defaultAppearance. ⚠️ Setting this to true replicates the old darkMode = \u0026quot;auto\u0026quot; setting. showAppearanceSwitcher Boolean false Whether the theme appearance switcher is dispalyed in the site footer. ⚠️ This parameter replaces darkToggle. The following table outlines some other key new parameters that control new features in version 2:\nNew parameter Type Default enableSearch Boolean false showScrollToTop Boolean true article.showTaxonomies Boolean false article.showTableOfContents Boolean false list.showTableOfContents Boolean false For the full list of supported parameters, refer to the Configuration docs.\nStep 4: Move assets #\rAll site assets, with the exception of favicons, now use Hugo Pipes to build an optimised version of your project. In order for the theme to locate your files, any previously static theme assets need to be moved to the Hugo assets folder. Primarily this is the author image and site logo:\nstatic/me.jpg → assets/me.jpg\nstatic/logo.jpg → assets/logo.jpg\nIf you have provided an author image or site logo, simply move these assets from static/ to assets/. If you use the same directory structure the theme will know where to find these files automatically. If you would like to provide a new path, update the logo and author.image config values accordingly.\nNote that this step does not apply to any assets in your project that are actually static. For example, a PDF file that you link directly to from within an article is a static asset. These files should remain in the static/ directory to ensure they are copied to the output folder when Hugo builds the site.\nStep 5: Check content #\rThe behavior of the figure shortcode is different in version 2. If you are using figure in your content and have advanced use cases, you may need to adjust the parameters you are providing.\nConsult the shortcode docs to learn more about supported parameters.\nStep 6: Rebuild #\rNow that all the configuration changes are complete, it\u0026rsquo;s time to rebuild the site. Run hugo, or your build command, and check that everything works as expected.\nIf you come across any errors, check the configuration is correct and refer to the full documentation for further guidance. Remember, the example config files bundled with the theme contain all the default parameters and are a great starting point.\n🙋‍♀️ If you still need help, feel free to ask your question on GitHub Discussions.\n","date":"20 January 2022","permalink":"/docs/version-2/upgrade/","section":"Documentation","summary":"","title":"Upgrading from Congo 1.x"},{"content":"Why do I procrastinate when I want to get things done?\nHistory #\rI\u0026rsquo;ve been an excellent procrastinator for years now. It\u0026rsquo;s the kind of thing that everyone does at some point but it feels like a real long term problem for me. I dropped out of college because I couldn\u0026rsquo;t organise myself to study or complete classwork. I\u0026rsquo;ve left a job because I couldn\u0026rsquo;t keep up with my responsibilities. My boss was very understanding and asked me why I couldn\u0026rsquo;t get tihngs done but I didn\u0026rsquo;t really have an answer. I just kept getting distracted and I felt like I was going in circles. In jobs where tasks were specific and repetitive I got on fine but what I\u0026rsquo;d really like to be doing is working in somwthing creative. Writing code, making computer games or building things. But I haven\u0026rsquo;t gotten much done. Progress is either painfully slow or non existant.\nWhen I\u0026rsquo;m planning I like to use a notebook to write down ideas. I\u0026rsquo;ve found old notebooks with ideas for webistes from more than 10 years ago that just never happened. Things that still seem like good ideas to me now that were never implemented, never even started properly.\nI\u0026rsquo;ve done years in therapy abd that\u0026rsquo;s helped lots of aspects of my life but even with big improvements in some things procrastination is still my companion. My bully.\nThere seems to be a threshold for me. If I get into a project I can keep focused on it for a decent amount of time. Writing ideas can gel together and I can be productive.\nMy fear has always been about starting - a lack of confidence and finishing - a fear of judgement The bit in the middle when I have my head down beavering away, that\u0026rsquo;s pretty good. A flow state, focus or just getting into the rhythm of a repetitive task.\nLooking at ADHD symptoms I seem to fit quite a few of them. BUt whether I get diagnosed or not I think I need to work on skills that can help me get things done.\nWhat don\u0026rsquo;t I procrastinate about? #\rIf I am avoiding a task I often flee towards cooking or baking. Things to do on the computer or in the garden? Time to turn on the oven and start mamking some pastry. Sometimes this is a last gasp effort to produce something by the end of the day. If there\u0026rsquo;s a meal on the table I can say that I made something.\nI don\u0026rsquo;t feel a fear about cooking. Maybe because it\u0026rsquo;s somehow separate from habits and fears from home? I didn\u0026rsquo;t need to learn how to cook until I moved away. I often cooked for my flatmates and now for my partner and they appreciate it. I have a routine of cooking and then being praised for it.\nReading isn\u0026rsquo;t much of a task, it\u0026rsquo;s something I use to relax at the end of the day so I don\u0026rsquo;t have any feelings of it being imposed on me. THere\u0026rsquo;s no way of failing at reading I suppose\nBenefits of procrastination #\rProcrastination is actually a great way of avoiding fear and stress. Have to start something that you don\u0026rsquo;t feel confident about? Put it off. Got a task you are scared to start? Do something, anything else intead and then you don\u0026rsquo;t have to deal with it.\nSometimes if you procrastinate the problem will actually go away. Someone else will step in and do it for you. You\u0026rsquo;ll be regarded as unreliable and people won\u0026rsquo;t ask you to do anything ever again. You\u0026rsquo;ll drop out of college or lose your job and have have fewer things forced on you.\nOvercoming Procrastination #\rThis is what we really want, right? Reading and understanding is fine and dandy but this is making our lives worse and we all want to beat this problem.\nObserve our feelings #\rFear of failure Who is going to judge you? specifically\nSet up for success #\rStart often, make it easy. When I didn\u0026rsquo;t __immediately __know what step to take next I procrastinated. Make the task small enough that you know how it will end Make it easy to start back into a project. I don\u0026rsquo;t want to be face with a cliff to climb, I want to see a single step that gets me back on the path.\nPlanning #\rOne source of planning. If you improve how you deal with the negative emotions you\u0026rsquo;ll be able to start more often Planning your tasks will allow you to make each step in the right direction. Spoonfeed yourself the correct choices.\nI like the tactility of using a paper notebook and a simple version of the bullet journal method. My thoughts are often racing so slowing down to makes notes phydically with a pen helps a lot. Asking people for advice doen\u0026rsquo;t ususally help. Just do it\nProcrastination is not a time management problem, it\u0026rsquo;s an emotional problem.\nThe desire to switch away from anything that\u0026rsquo;s scary.\nProcrastination is quick off the mark. Procrastination will be half way around the world while your plans are still pulling on their trousers.\nWe procrastinate when we fear a threat to our self-worth. \u0026hellip; to temporarily relieve deep inner fears Procrastination rewards us with temporary relief from stress\nThe more complex and varied your sense of self the less likely you are to become depressed over stress in one area \u0026ldquo;because you have these uncontaminated areas of your life that can act as buffers\u0026rdquo;.\nThe childlike side of her once felt caught between the need for approval from authorities and her need to express her fear and her power through procrastination.\nUsing procrastination to express power over your fears.\nPersonal #\rThe imposition is one of the things that makes me feel scared and that a very broad and common situation to be in. So it would seem that I should feel better if I\u0026rsquo;m self motivated, but that doesn\u0026rsquo;t get rid of the fear of failure. And failing on my own is another very scary thing.\n","date":"7 January 2022","permalink":"/samples/drafts/the-benefits-of-procrastination/","section":"Content Samples","summary":"","title":"The Benefits of Procrastination"},{"content":"What is this site about? #\rI\u0026rsquo;m trying to learn new skills and document my efforts.\nThe Author #\rIrish, in my 40\u0026rsquo;s trying to work on exciting projects. he/him.\nWhat I\u0026rsquo;ve done #\rMy first computer was a second-hand Commodore 64C. Even before I got it I was obsessed with computers and loved poring over magazines. I loved the idea of making things. I tried to build stone axes and bows and arrows when I was 10. They barely worked and weren\u0026rsquo;t practical but I did manage to get home-made weapons banned from my primary school.\nI went to college to study Science and chose Physics and Computer Science options. Looking back I realise that I was suffering pretty badly from anxiety and had very poor study skills.\nI dropped out.\nDecades later I feel like I haven\u0026rsquo;t achieved much. My CV feels embarassing. I still suffer from anxiety.\nBut I still have dreams of making things and learning how things work.\nSo lets try again.\nLet\u0026rsquo;s Do things and Tell people about them.\nWhat I\u0026rsquo;m going to do #\rI\u0026rsquo;ve made plenty of plans before and not made progress with them. On this site I want to report on how things have gone.\nI\u0026rsquo;m interested in programming, woodwork, game development, writing and languages. It would be amazing to generate an income from doing something I enjoy.\nColophon #\rThis site is generated by Hugo along with the Congo Theme.\nText is edited in VS Code and it\u0026rsquo;s all published on Netlify\n","date":"30 December 2021","permalink":"/about/","section":"Strange Characters","summary":"","title":"About"},{"content":"\rProject Hail Mary by Andy Weir. Really enjoyable scifi from the author of The Martian.\nExhalation by Ted Chiang. A collection of short stories, the tale of the Baghdad Shop Owner was a particular favourite.\nSecond Sleep by Richard Harris. An English priest in a simpler time unravels a local mystery.\nThe Reading List #\rThe master key / Masako Togawa ; translated by Simon Grove. Project Hail Mary / Andy Weir. Milkman / Anna Burns. The Doors of Eden / Adrian Tchaikovsky. Exhalation / Ted Chiang. History of wolves / Emily Fridlund. The Bullet Journal method / Ryder Carroll. Children of Time / Adrian Tchaikovsky. Salvation / Peter F. Hamilton. Children of ruin / Adrian Tchaikovsky. The water dancer : a novel / Ta-Nehisi Coates. Washington Black : a novel / Esi Edugyan. RHS design outdoors : projects \u0026amp; plans for a stylish garden / Matthew Keightley The second sleep / Robert Harris. Shadows / Neil Gaiman, P. Craig Russell ; illustrated by Scott Hampton. Re-reads #\rLibraries weren\u0026rsquo;t open for quite a while during the pandemic so I turned to some books already on my shelves.\nThe Player of Games / Iain M. Banks. Excession / Iain M. Banks. Inversions / Iain M. Banks. The Hydrogen Sonata / Iain M. Banks. Surface Detail / Iain M. Banks. Foundation / Isaac Asimov. Wool / Hugh Howey. Transition / Iain M. Banks. Snow Crash / Neal Stephenson. World War Z / Max Brooks. Anathem / Neal Stephenson ","date":"6 November 2021","permalink":"/journal/2021/","section":"Journal","summary":"Project Hail Mary, Exhalation and Second Sleep","title":"2021"},{"content":"\rThe body keeps the score describes the damage done to people by trauma and some of the different ways to heal.\nA canticle for Leibowitz is a scifi classic. The Catholic church tries to preserve the written word in a future ravaged by nuclear war.\nThe Reading List #\rMoonglow / Michael Chabon. The body keeps the score : brain, mind, and body in the healing of trauma / Bessel A. van der Kolk, M.D. The corporation wars omnibus / Ken MacLeod. Blackout : tomorrow will be too late / Marc Elsberg ; translated by Marshall Yarbrough. Maigret [Inspector Maigret 19] / Georges Simenon Re-reads #\rBooks I already owned that I turned to while the library was closed.\nRed Mars / Kim Stanley Robinson Sanctuary / Sho Fumimura ; Art by Ryoichi Ikegami; translated by Matt Thorn. Sunburst / Alfred Bester A Canticle for Leibowitz / Walter M. Miller Jr. The Abyss / Orson Scott Card. ","date":"31 December 2020","permalink":"/journal/2020/","section":"Journal","summary":"The Body Keeps the Score and A Canticle for Leibowitz","title":"2020"},{"content":"Simply follow the standard Hugo Quick Start procedure to get up and running quickly.\nDetailed installation instructions can be found below. Instructions for updating the theme are also available.\nInstallation #\rThese instructions will get you up and running using Hugo and Congo from a completely blank state. Most of the dependencies mentioned in this guide can be installed using the package manager of choice for your platform.\nInstall Hugo #\rIf you haven\u0026rsquo;t used Hugo before, you will need to install it onto your local machine. You can check if it\u0026rsquo;s already installed by running the command hugo version.\nMake sure you are using Hugo version 0.87.0 or later as the theme takes advantage of some of the latest Hugo features.\rYou can find detailed installation instructions for your platform in the Hugo docs.\nCreate a new site #\rRun the command hugo new site mywebsite to create a new Hugo site in a directory named mywebsite.\nNote that you can name the project directory whatever you choose, but the instructions below will assume it\u0026rsquo;s named mywebsite. If you use a different name, be sure to substitute it accordingly.\nDownload the Congo theme #\rThere several different ways to install the Congo theme into your Hugo website. From easiest to most difficult to install and maintain, they are:\nHugo module (recommended) Git submodule Manual file copy If you\u0026rsquo;re unsure, choose the Hugo module method.\nInstall using Hugo #\rThis method is the quickest and easiest for keeping the theme up-to-date. Hugo uses Go to initialise and manage modules so you need to ensure you have go installed before proceeding.\nDownload and install Go. You can check if it\u0026rsquo;s already installed by using the command go version.\nMake sure you are using Go version 1.12 or later as Hugo requires this for modules to work correctly.\rFrom your Hugo project directory (that you created above), initialise modules for your website:\n# If you\u0026#39;re managing your project on GitHub hugo mod init github.com/\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt; # If you\u0026#39;re managing your project locally hugo mod init my-project Add the theme to your configuration by creating a new file config/_default/module.toml and adding the following:\n[[imports]] path = \u0026#34;github.com/jpanther/congo/v2\u0026#34; Start your server using hugo server and the theme will be downloaded automatically.\nContinue to set up the theme configuration files.\nInstall using git #\rFor this method you\u0026rsquo;ll need to ensure you have Git installed on your local machine.\nChange into the directory for your Hugo website (that you created above), initialise a new git repository and add Congo as a submodule.\ncd mywebsite git init git submodule add -b stable https://github.com/jpanther/congo.git themes/congo Then continue to set up the theme configuration files.\nInstall manually #\rDownload the latest release of the theme source code.\nDownload from Github\rExtract the archive, rename the folder to congo and move it to the themes/ directory inside your Hugo project\u0026rsquo;s root folder.\nContinue to set up the theme configuration files.\nSet up theme configuration files #\rIn the root folder of your website, delete the config.toml file that was generated by Hugo. Copy the *.toml config files from the theme into your config/_default/ folder. This will ensure you have all the correct theme settings and will enable you to easily customise the theme to your needs.\nNote: You should not overwrite the module.toml file if one already exists in your project!\rDepending on how you installed the theme you will find the theme config files in different places:\nHugo Modules: In the Hugo cache directory, or download a copy from GitHub Git submodule or Manual install: themes/congo/config/_default Once you\u0026rsquo;ve copied the files, your config folder should look like this:\nconfig/_default/ ├─ config.toml ├─ markup.toml ├─ menus.toml ├─ module.toml # if you installed using Hugo Modules └─ params.toml Important: If you didn\u0026rsquo;t use Hugo Modules to install Congo, you must add the line theme = \u0026quot;congo\u0026quot; to the top of your config.toml file.\rNext steps #\rThe basic Congo installation is now complete. Continue to the Getting Started section to learn more about configuring the theme.\nInstalling updates #\rFrom time to time there will be new releases posted that apply fixes and add new functionality to the theme. In order to take advantage of these changes, you will need to update the theme files on your website.\nHow you go about this will depend on the installation method you chose when the theme was originally installed. Instructions for each method can be found below.\nHugo module Git submodule Manual file copy Update using Hugo #\rHugo makes updating modules super easy. Simply change into your project directory and execute the following command:\nhugo mod get -u Hugo will automatically update any modules that are required for your project. It does this by inspecting your module.toml and go.mod files. If you have any issues with the update, check to ensure these files are still configured correctly.\nThen simply rebuild your site and check everything works as expected.\nUpdate using git #\rGit submodules can be updated using the git command. Simply execute the following command and the latest version of the theme will be downloaded into your local repository:\ngit submodule update --remote --merge Once the submodule has been updated, rebuild your site and check everything works as expected.\nUpdate manually #\rUpdating Congo manually requires you to download the latest copy of the theme and replace the old version in your project.\nNote that any local customisations you have made to the theme files will be lost during this process.\rDownload the latest release of the theme source code.\nDownload from Github\rExtract the archive, rename the folder to congo and move it to the themes/ directory inside your Hugo project\u0026rsquo;s root folder. You will need to overwrite the existing directory to replace all the theme files.\nRebuild your site and check everything works as expected.\n","date":"16 August 2020","permalink":"/docs/installation/","section":"Documentation","summary":"","title":"Installation"},{"content":"\rThis section assumes you have already installed the Congo theme.\rThe config files that ship with Congo contain all of the possible settings that the theme recognises. By default, many of these are commented out but you can simply uncomment them to activate or change a specific feature.\nBasic configuration #\rBefore creating any content, there are a few things you should set for a new installation. Starting in the config.toml file, set the baseURL and languageCode parameters. The languageCode should be set to the main language that you will be using to author your content.\n# config/_default/config.toml baseURL = \u0026#34;https://your_domain.com\u0026#34; languageCode = \u0026#34;en\u0026#34; The next step is to configure the language settings. Although Congo supports multilingual setups, for now, just configure the main language.\nLocate the languages.en.toml file in the config folder. If your main language is English you can use this file as is. Otherwise, rename it so that it includes the correct language code in the filename. For example, for French, rename the file to languages.fr.toml.\nNote that the language code in the language config filename should match the languageCode setting in config.toml.\r# config/_default/languages.en.toml title = \u0026#34;My awesome website\u0026#34; [author] name = \u0026#34;My name\u0026#34; image = \u0026#34;img/author.jpg\u0026#34; headline = \u0026#34;A generally awesome human\u0026#34; bio = \u0026#34;A little bit about me\u0026#34; links = [ { twitter = \u0026#34;https://twitter.com/username\u0026#34; } ] The [author] configuration determines how the author information is displayed on the website. The image should be placed in the site\u0026rsquo;s assets/ folder. Links will be displayed in the order they are listed.\nIf you need extra detail, further information about each of these configuration options, is covered in the Configuration section.\nColour schemes #\rCongo ships with a number of colour schemes out of the box. To change the scheme, simply set the colorScheme theme parameter. Valid options are congo (default), avocado, fire, ocean and slate.\n# config/_default/params.toml colorScheme = \u0026#34;congo\u0026#34; Congo defines a three-colour palette that is used throughout the theme. Each main colour contains ten shades which are based upon the colours that are included in Tailwind.\nCongo (default) #\rAvocado #\rFire #\rOcean #\rSlate #\rAlthough these are the default schemes, you can also create your own. Refer to the Advanced Customisation section for details.\nOrganising content #\rBy default, Congo doesn\u0026rsquo;t force you to use a particular content type. In doing so you are free to define your content as you wish. You might prefer pages for a static site, posts for a blog, or projects for a portfolio.\nHere\u0026rsquo;s a quick overview of a basic Congo project. All content is placed within the content folder:\n. ├── assets │ └── img │ └── author.jpg ├── config │ └── _default ├── content │ ├── _index.md │ ├── about.md │ └── posts │ ├── _index.md │ ├── first-post.md │ └── another-post │ ├── aardvark.jpg │ └── index.md └── themes └── congo It\u0026rsquo;s important to have a firm grasp of how Hugo expects content to be organised as the theme is designed to take full advantage of Hugo page bundles. Be sure to read the official Hugo docs for more information.\nCongo is also flexible when it comes to taxonomies. Some people prefer to use tags and categories to group their content, others prefer to use topics.\nHugo defaults to using posts, tags and categories out of the box and this will work fine if that\u0026rsquo;s what you want. If you wish to customise this, however, you can do so by creating a taxonomies.toml configuation file:\n# config/_default/taxonomies.toml topic = \u0026#34;topics\u0026#34; This will replace the default tags and categories with topics. Refer to the Hugo Taxonomy docs for more information on naming taxonomies.\nWhen you create a new taxonomy, you will need to adjust the navigation links on the website to point to the correct sections, which is covered below.\nMenus #\rCongo has two menus that can be customised to suit the content and layout of your site. The main menu appears in the site header and the footer menu appears at the bottom of the page just above the copyright notice.\nBoth menus are configured in the menus.en.toml file. Similarly to the languages config file, if you wish to use another language, rename this file and replace en with the language code you wish to use.\n# config/_default/menus.toml [[main]] name = \u0026#34;Blog\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Topics\u0026#34; pageRef = \u0026#34;topics\u0026#34; weight = 20 [[footer]] name = \u0026#34;Privacy\u0026#34; url = \u0026#34;https://external-link\u0026#34; The name parameter specifies the text that is used in the menu link. You can also optionally provide a title which fills the HTML title attribute for the link.\nThe pageRef parameter allows you to easily reference Hugo content pages and taxonomies. It is the quickest way to configure the menu as you can simply refer to any Hugo content item and it will automatically build the correct link. To link to external URLs, the url parameter can be used.\nMenu links will be sorted from lowest to highest weight, and then alphabetically by name.\nBoth menus are completely optional and can be commented out if not required. Use the template provided in the file as a guide.\nDetailed configuration #\rThe steps above are the bare minimum configuration. If you now run hugo server you will be presented with a blank Congo website. Detailed configuration is covered in the Configuration section.\n","date":"15 August 2020","permalink":"/docs/getting-started/","section":"Documentation","summary":"","title":"Getting Started"},{"content":"Congo is a highly customisable theme and uses some of the latest Hugo features to simplify how it is configured.\nThe theme ships with a default configuration that gets you up and running with a basic blog or static website.\nConfiguration files bundled with the theme are provided in TOML format as this is the default Hugo syntax. Feel free to convert your config to YAML or JSON if you wish.\nThe default theme configuration is documented in each file so you can freely adjust the settings to meet your needs.\nAs outlined in the installation instructions, you should adjust your theme configuration by modifying the files in the config/_default/ folder of your Hugo project and delete the config.toml file in your project root.\rSite configuration #\rStandard Hugo configuration variables are respected throughout the theme, however there are some specific things that should be configured for the best experience.\nThe site configuration is managed through the config/_default/config.toml file. The table below outlines all the settings that the Congo takes advantage of.\nNote that the variable names provided in this table use dot notation to simplify the TOML data structure (ie. outputs.home refers to [outputs] home).\nName Default Description theme \u0026quot;congo\u0026quot; When using Hugo Modules this config value should be removed. For all other installation types, this must be set to congo for the theme to function. baseURL Not set The URL to the root of the website. defaultContentLanguage \u0026quot;en\u0026quot; This value determines the default language of theme components and content. Refer to the language and i18n section below for supported language codes. enableRobotsTXT true When enabled a robots.txt file will be created in the site root that allows search engines to crawl the entire site. Set to false if you wish to provide your own file. paginate 10 The number of articles listed on each page of the article listing. summaryLength 0 The number of words that are used to generate the article summary when one is not provided in the front matter. A value of 0 will use the first sentence. This value has no effect when summaries are hidden. outputs.home [\u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot;] The output formats that are generated for the site. Congo requires HTML, RSS and JSON for all theme components to work correctly. permalinks Not set Refer to the Hugo docs for permalink configuration. taxonomies Not set Refer to the Organising content section for taxonomy configuration. Language and i18n #\rCongo is optimised for full multilingual websites and theme assets are translated into several languages out of the box. The language configuration allows you to generate multiple versions of your content to provide a customised experience to your visitors in their native language.\nThe theme currently supports the following languages by default:\nLanguage Code 🇬🇧 English en 🇧🇩 Bengali bn 🇨🇳 Chinese zh 🇫🇷 French fr 🇩🇪 German de 🇧🇷 Portuguese (Brazil) pt-br 🇪🇸 Spanish (Spain) es 🇹🇷 Turkish tr The default translations can be overridden by creating a custom file in i18n/[code].yaml that contains the translation strings. You can also use this method to add new languages. If you\u0026rsquo;d like to share a new translation with the community, please open a pull request.\nConfiguration #\rIn order to be as flexible as possible, a language configuration file needs to be created for each language on the website. By default Congo includes an English language configuration at config/_default/languages.en.toml.\nThe default file can be used as a template to create additional languages, or renamed if you wish to author your website in a language other than English. Simply name the file using the format languages.[language-code].toml.\nNote: Ensure the defaultContentLanguage parameter in the site configuration matches the language code in your language config filename.\rName Default Description languageCode \u0026quot;en\u0026quot; The Hugo language code for this file. It can be a top-level language (ie. en) or a sub-variant (ie. en-au) and should match the language code in the filename. Hugo expects this value to always be in lowercase. For proper HTML compliance, set the isoCode parameter which is case-sensitive. languageName \u0026quot;English\u0026quot; The name of the language. displayName \u0026quot;EN\u0026quot; The name used when the language appears on the website. isoCode \u0026quot;en\u0026quot; The ISO language code for HTML metadata purposes. It can be a top-level language (ie. en) or a sub-variant (ie. en-AU). weight 1 The weight determines the order of languages when building multilingual sites. rtl false Whether or not this is a RTL language. Set to true to reflow content from right-to-left. Congo fully supports using RTL and LTR languages at the same time and will dynamically adjust to both. dateFormat \u0026quot;2 January 2006\u0026quot; How dates are formatted in this language. Refer to the Hugo docs for acceptable formats. title \u0026quot;Congo\u0026quot; The title of the website. This will be displayed in the site header and footer. description Not set The website description. This will be used in the site metadata. copyright Not set A Markdown string containing the copyright message to be displayed in the site footer. If none is provided, Congo will automatically generate a copyright string using the site title. author.name Not set The author\u0026rsquo;s name. This will be displayed in article footers, and on the homepage when the profile layout is used. author.image Not set Path to the image file of the author. The image should be a 1:1 aspect ratio and placed in the site\u0026rsquo;s assets/ folder. author.headline Not set A Markdown string containing the author\u0026rsquo;s headline. It will be displayed on the profile homepage under the author\u0026rsquo;s name. author.bio Not set A Markdown string containing the author\u0026rsquo;s bio. It will be displayed in article footers. author.links Not set The links to display alongside the author\u0026rsquo;s details. The config file contains example links which can simply be uncommented to enable. The order that the links are displayed is determined by the order they appear in the array. Custom links can be added by providing corresponding SVG icon assets in assets/icons/. Menus #\rCongo also supports language-specific menu configurations. Menu config files follow the same naming format as the languages file. Simply provide the language code in the file name to tell Hugo which language the file relates to.\nMenu config files are named with the format menus.[language-code].toml. Always ensure that the language code used in the menus configuration matches the languages configuration.\nThe Getting Started section explains more about the structure of this file. You can also refer to the Hugo menu docs for more configuration examples.\nTheme parameters #\rCongo provides a large number of configuration parameters that control how the theme functions. The table below outlines every available parameter in the config/_default/params.toml file.\nMany of the article defaults here can be overridden on a per article basis by specifying it in the front matter. Refer to the Front Matter section for further details.\nName Default Description colorScheme \u0026quot;congo\u0026quot; The theme colour scheme to use. Valid values are congo (default), avocado, ocean, fire and slate. Refer to the Colour Schemes section for more details. defaultAppearance \u0026quot;light\u0026quot; The default theme appearance, either light or dark. autoSwitchAppearance true Whether the theme appearance automatically switches based upon the visitor\u0026rsquo;s operating system preference. Set to false to force the site to always use the defaultAppearance. showAppearanceSwitcher false Whether or not to show the appearance switcher in the site footer. The browser\u0026rsquo;s local storage is used to persist the visitor\u0026rsquo;s preference. enableSearch false Whether site search is enabled. Set to true to enable search functionality. Note that the search feature depends on the outputs.home setting in the site configuration being set correctly. enableCodeCopy false Whether copy-to-clipboard buttons are enabled for \u0026lt;code\u0026gt; blocks. logo Not set The relative path to the site logo file within the assets/ folder. The logo file should be provided at 2x resolution and supports any image dimensions. mainSections Not set The sections that should be displayed in the recent articles list. If not provided the section with the greatest number of articles is used. robots Not set String that indicates how robots should handle your site. If set, it will be output in the page head. Refer to Google\u0026rsquo;s docs for valid values. showScrollToTop true When set to true the scroll to top arrow is displayed. homepage.layout \u0026quot;page\u0026quot; The layout of the homepage. Valid values are page, profile or custom. When set to custom, you must provide your own layout by creating a /layouts/partials/home/custom.html file. Refer to the Homepage Layout section for more details. homepage.showRecent false Whether or not to display the recent articles list on the homepage. article.showDate true Whether or not article dates are displayed. article.showDateUpdated false Whether or not the dates articles were updated are displayed. article.showAuthor true Whether or not the author box is displayed in the article footer. article.showBreadcrumbs false Whether or not breadcrumbs are displayed in the article header. article.showDraftLabel true Whether or not the draft indicator is shown next to articles when site is built with --buildDrafts. article.showEdit false Whether or not the link to edit the article content should be displayed. article.editURL Not set When article.showEdit is active, the URL for the edit link. article.editAppendPath true When article.showEdit is active, whether or not the path to the current article should be appended to the URL set at article.editURL. article.showHeadingAnchors true Whether or not heading anchor links are displayed alongside headings within articles. article.showPagination true Whether or not the next/previous article links are displayed in the article footer. article.invertPagination false Whether or not to flip the direction of the next/previous article links. article.showReadingTime true Whether or not article reading times are displayed. article.showTableOfContents false Whether or not the table of contents is displayed on articles. article.showTaxonomies false Whether or not the taxonomies related to this article are displayed. article.showWordCount false Whether or not article word counts are displayed. article.sharingLinks Not set Which sharing links to display at the end of each article. When not provided, or set to false no links will be displayed. list.showBreadcrumbs false Whether or not breadcrumbs are displayed in the header on list pages. list.showTableOfContents false Whether or not the table of contents is displayed on list pages. list.showSummary false Whether or not article summaries are displayed on list pages. If a summary is not provided in the front matter, one will be auto generated using the summaryLength parameter in the site configuration. list.groupByYear true Whether or not articles are grouped by year on list pages. sitemap.excludedKinds [\u0026quot;taxonomy\u0026quot;, \u0026quot;term\u0026quot;] Kinds of content that should be excluded from the generated /sitemap.xml file. Refer to the Hugo docs for acceptable values. taxonomy.showTermCount true Whether or not the number of articles within a taxonomy term is displayed on the taxonomy listing. fathomAnalytics.site Not set The site code generated by Fathom Analytics for the website. Refer to the Analytics docs for more details. fathomAnalytics.domain Not set If using a custom domain with Fathom Analytics, provide it here to serve script.js from the custom domain. verification.google Not set The site verification string provided by Google to be included in the site metadata. verification.bing Not set The site verification string provided by Bing to be included in the site metadata. verification.pinterest Not set The site verification string provided by Pinterest to be included in the site metadata. verification.yandex Not set The site verification string provided by Yandex to be included in the site metadata. ","date":"14 August 2020","permalink":"/docs/configuration/","section":"Documentation","summary":"","title":"Configuration"},{"content":"Congo has built-in support for a number of FontAwesome 5 icons. These can be included in your website through either the icon partial or icon shortcode.\nAdditionally, custom icons are also fully supported. Simply provide your own SVG icon assets by placing them in the assets/icons/ directory in the root of your project. Any icons in the icons directory will then be available to use throughout the theme.\nThe full list of built-in icons and their corresponding names can referenced below.\nIcon name Preview amazon apple blogger codepen dev dribbble edit email exclamation-triangle icon exclamation-triangle facebook flickr foursquare github gitlab google instagram keybase kickstarter lastfm link linkedin mastodon medium microsoft moon orcid patreon pinterest reddit researchgate slack snapchat soundcloud stackoverflow icon stackoverflow steam sun telegram tiktok tumblr twitch twitter whatsapp youtube ","date":"14 August 2020","permalink":"/samples/icons/","section":"Content Samples","summary":"","title":"Icons"},{"content":"Congo provides a fully flexible homepage layout. There are two main templates to choose from with additional settings to adjust the design. Alternatively, you can also provide your own template and have complete control over the homepage content.\nThe layout of the homepage is controlled by the homepage.layout setting in the params.toml configuration file. Additionally, all layouts have the option to include a listing of recent articles.\nPage layout #\rThe default layout is the page layout. It\u0026rsquo;s simply a normal content page that displays your Markdown content. It\u0026rsquo;s great for static websites and provides a lot of flexibility.\nTo enable the page layout, set homepage.layout = \u0026quot;page\u0026quot; in the params.toml configuration file.\nProfile layout #\rThe profile layout is great for personal websites and blogs. It puts the author\u0026rsquo;s details front and centre by providing an image and links to social profiles.\nThe author information is provided in the languages configuration file. Refer to the Getting Started and Language Configuration sections for parameter details.\nAdditionally, any Markdown content that is provided in the homepage content will be placed below the author profile. This allows extra flexibility for displaying a bio or other custom content using shortcodes.\nTo enable the profile layout, set homepage.layout = \u0026quot;profile\u0026quot; in the params.toml configuration file.\nCustom layout #\rIf the built-in homepage layouts aren\u0026rsquo;t sufficient for your needs, you have the option to provide your own custom layout. This allows you to have total control over the page content and essentially gives you a blank slate to work with.\nTo enable the custom layout, set homepage.layout = \u0026quot;custom\u0026quot; in the params.toml configuration file.\nWith the configuration value set, create a new custom.html file and place it in layouts/partials/home/custom.html. Now whatever is in the custom.html file will be placed in the content area of the site homepage. You may use whatever HTML, Tailwind, or Hugo templating functions you wish to define your layout.\nTo include recent articles on the custom layout, use the recent-articles.html partial.\nAs an example, the homepage on this site uses the custom layout to allow toggling between the profile and page layouts. Visit the GitHub repo to see how it works.\nRecent articles #\rAll homepage layouts have the option of displaying recent articles below the main page content. To enable this, simply set the homepage.showRecent setting to true in the params.toml configuration file.\nThe articles listed in this section are derived from the homepage.mainSections setting which allows for whatever content types you are using on your website. For instance, if you had content sections for posts and projects you could set this setting to [\u0026quot;posts\u0026quot;, \u0026quot;projects\u0026quot;] and all the articles in these two sections would be used to populate the recent list. The theme expects this setting to be an array so if you only use one section for all your content, you should set this accordingly: [\u0026quot;blog\u0026quot;].\n","date":"13 August 2020","permalink":"/docs/homepage-layout/","section":"Documentation","summary":"","title":"Homepage Layout"},{"content":"In addition to the default Hugo front matter parameters, Congo adds a number of additional options to customise the presentation of individual articles. All the available theme front matter parameters are listed below.\nFront matter parameter default values are inherited from the theme\u0026rsquo;s base configuration, so you only need to specify these parameters in your front matter when you want to override the default.\nName Default Description title Not set The name of the article. description Not set The text description for the article. It is used in the HTML metadata. externalUrl Not set If this article is published on a third-party website, the URL to this article. Providing a URL will prevent a content page being generated and any references to this article will link directly to the third-party website. editURL article.editURL When showEdit is active, the URL for the edit link. editAppendPath article.editAppendPath When showEdit is active, whether or not the path to the current article should be appended to the URL set at editURL. groupByYear list.groupByYear Whether or not articles are grouped by year on list pages. menu Not set When a value is provided, a link to this article will appear in the named menus. Valid values are main or footer. robots Not set String that indicates how robots should handle this article. If set, it will be output in the page head. Refer to Google\u0026rsquo;s docs for valid values. sharingLinks article.sharingLinks Which sharing links to display at the end of this article. When not provided, or set to false no links will be displayed. showAuthor article.showAuthor Whether or not the author box is displayed in the article footer. showDate article.showDate Whether or not the article date is displayed. The date is set using the date parameter. showDateUpdated article.showDateUpdated Whether or not the date the article was updated is displayed. The date is set using the lastmod parameter. showEdit article.showEdit Whether or not the link to edit the article content should be displayed. showHeadingAnchors article.showHeadingAnchors Whether or not heading anchor links are displayed alongside headings within this article. showPagination article.showPagination Whether or not the next/previous article links are displayed in the article footer. invertPagination article.invertPagination Whether or not to flip the direction of the next/previous article links. showReadingTime article.showReadingTime Whether or not the article reading time is displayed. showTaxonomies article.showTaxonomies Whether or not the taxonomies that relate to this article are displayed. showTableOfContents article.showTableOfContents Whether or not the table of contents is displayed on this article. showWordCount article.showWordCount Whether or not the article word count is displayed. showSummary list.showSummary Whether or not the article summary should be displayed on list pages. summary Auto generated using summaryLength (see site configuration) When showSummary is enabled, this is the Markdown string to be used as the summary for this article. xml true unless excluded by sitemap.excludedKinds Whether or not this article is included in the generated /sitemap.xml file. ","date":"12 August 2020","permalink":"/docs/front-matter/","section":"Documentation","summary":"","title":"Front Matter"},{"content":"In addition to all the default Hugo shortcodes, Congo adds a few extras for additional functionality.\nAlert #\ralert outputs its contents as a stylised message box within your article. It\u0026rsquo;s useful for drawing attention to important information that you don\u0026rsquo;t want the reader to miss.\nThe input is written in Markdown so you can format it however you please.\nExample:\n{{\u0026lt; alert \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Warning! This action is destructive!\rBadge #\rbadge outputs a styled badge component which is useful for displaying metadata.\nExample:\n{{\u0026lt; badge \u0026gt;}} New article! {{\u0026lt; /badge \u0026gt;}} New article!\rButton #\rbutton outputs a styled button component which can be used to highlight a primary action. It has two optional variables href and target which can be used to specify the URL and target of the link.\nExample:\n{{\u0026lt; button href=\u0026#34;#button\u0026#34; target=\u0026#34;_self\u0026#34; \u0026gt;}} Call to action {{\u0026lt; /button \u0026gt;}} Call to action\rChart #\rchart uses the Chart.js library to embed charts into articles using simple structured data. It supports a number of different chart styles and everything can be configured from within the shortcode. Simply provide the chart parameters between the shortcode tags and Chart.js will do the rest.\nRefer to the official Chart.js docs for details on syntax and supported chart types.\nExample:\n{{\u0026lt; chart \u0026gt;}} type: \u0026#39;bar\u0026#39;, data: { labels: [\u0026#39;Tomato\u0026#39;, \u0026#39;Blueberry\u0026#39;, \u0026#39;Banana\u0026#39;, \u0026#39;Lime\u0026#39;, \u0026#39;Orange\u0026#39;], datasets: [{ label: \u0026#39;# of votes\u0026#39;, data: [12, 19, 3, 5, 2, 3], }] } {{\u0026lt; /chart \u0026gt;}} You can see some additional Chart.js examples on the charts samples page.\nFigure #\rCongo includes a figure shortcode for adding images to content. The shortcode replaces the base Hugo functionality in order to provide additional performance benefits.\nWhen a provided image is a page resource, it will be optimised using Hugo Pipes and scaled in order to provide images appropriate to different device resolutions. If a URL to an external image is provided, it will be included as-is without any image processing by Hugo.\nThe figure shortcode accepts six parameters:\nParameter Description src Required. The filename or URL of the image. When providing a filename, this image must be a page resource bundled with the page. alt Alternative text description for the image. caption Markdown for the image caption, which will be displayed below the image. class Additional CSS classes to apply to the image. href URL that the image should be linked to. default Special parameter to revert to default Hugo figure behaviour. Simply provide default=true and then use normal Hugo shortcode syntax. Congo also supports automatic conversion of images included using standard Markdown syntax. Simply use the following format and the theme will handle the rest:\n![Alt text](image.jpg \u0026#34;Image caption\u0026#34;) Example:\n{{\u0026lt; figure src=\u0026#34;abstract.jpg\u0026#34; alt=\u0026#34;Abstract purple artwork\u0026#34; caption=\u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34; \u0026gt;}} \u0026lt;!-- OR --\u0026gt; ![Abstract purple artwork](abstract.jpg \u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34;) Photo by Jr Korpa on Unsplash\rIcon #\ricon outputs an SVG icon and takes the icon name as its only parameter. The icon is scaled to match the current text size.\nExample:\n{{\u0026lt; icon \u0026#34;github\u0026#34; \u0026gt;}} Output: Icons are populated using Hugo pipelines which makes them very flexible. Congo includes a number of built-in icons for social, links and other purposes. Check the icon samples page for a full list of supported icons.\nCustom icons can be added by providing your own icon assets in the assets/icons/ directory of your project. The icon can then be referenced in the shortcode by using the SVG filename without the .svg extension.\nIcons can also be used in partials by calling the icon partial.\nKatex #\rThe katex shortcode can be used to add mathematical expressions to article content using the KaTeX package. Refer to the online reference of supported TeX functions for the available syntax.\nTo include mathematical expressions in an article, simply place the shortcode anywhere with the content. It only needs to be included once per article and KaTeX will automatically render any markup on that page. Both inline and block notation are supported.\nInline notation can be generated by wrapping the expression in \\\\( and \\\\) delimiters. Alternatively, block notation can be generated using $$ delimiters.\nExample:\n{{\u0026lt; katex \u0026gt;}} \\\\(f(a,b,c) = (a^2+b^2+c^2)^3\\\\) \\(f(a,b,c) = (a^2+b^2+c^2)^3\\)\nCheck out the mathematical notation samples page for more examples.\nLead #\rlead is used to bring emphasis to the start of an article. It can be used to style an introduction, or to call out an important piece of information. Simply wrap any Markdown content in the lead shortcode.\nExample:\n{{\u0026lt; lead \u0026gt;}} When life gives you lemons, make lemonade. {{\u0026lt; /lead \u0026gt;}} When life gives you lemons, make lemonade.\rMermaid #\rmermaid allows you to draw detailed diagrams and visualisations using text. It uses Mermaid under the hood and supports a wide variety of diagrams, charts and other output formats.\nSimply write your Mermaid syntax within the mermaid shortcode and let the plugin do the rest.\nRefer to the official Mermaid docs for details on syntax and supported diagram types.\nExample:\n{{\u0026lt; mermaid \u0026gt;}} graph LR; A[Lemons]--\u0026gt;B[Lemonade]; B--\u0026gt;C[Profit] {{\u0026lt; /mermaid \u0026gt;}} graph LR;\rA[Lemons]--\u003eB[Lemonade];\rB--\u003eC[Profit]\rYou can see some additional Mermaid examples on the diagrams and flowcharts samples page.\n","date":"11 August 2020","permalink":"/docs/shortcodes/","section":"Documentation","summary":"","title":"Shortcodes"},{"content":"Analytics #\rCongo provides built-in support for Fathom Analytics and Google Analytics. Fathom is a paid alternative to Google Analytics that respects user privacy. If you\u0026rsquo;re interested you can use this affiliate link to receive $10 credit and try the service.\nFathom Analytics #\rTo enable Fathom Analytics support, simply provide your Fathom site code in the config/_default/params.toml file. If you also use the custom domain feature of Fathom and would like to serve their script from your domain, you can also additionally provide the domain configuration value. If you don\u0026rsquo;t provide a domain value, the script will load directly from Fathom DNS.\n# config/_default/params.toml [fathomAnalytics] site = \u0026#34;ABC12345\u0026#34; domain = \u0026#34;llama.yoursite.com\u0026#34; Google Analytics #\rGoogle Analytics support is provided through the internal Hugo partial. Simply provide the googleAnalytics key in the config/_default/config.toml file and the script will be added automatically.\nBoth version 3 (analytics.js) and version 4 (gtag.js) are supported, based on the configuration value provided:\n# config/_default/config.toml # version 3 googleAnalytics = \u0026#34;UA-PROPERTY_ID\u0026#34; # version 4 googleAnalytics = \u0026#34;G-MEASUREMENT_ID\u0026#34; Custom analytics providers #\rIf you wish to use a different analytics provider on your website you can also override the analytics partial and provide your own script. Simply create the file layouts/partials/analytics.html in your project and it will automatically include it in the \u0026lt;head\u0026gt; of the website.\nComments #\rTo add comments to your articles, Congo includes support for a comments partial that is included at the base of each article page. Simply provide a layouts/partials/comments.html which contains the code required to display your chosen comments.\nYou can use either the built-in Hugo Disqus template, or provide your own custom code. Refer to the Hugo docs for further information.\nFavicons #\rCongo provides a default set of blank favicons to get started but you can provide your own assets to override them. The easiest way to obtain new favicon assets is to generate them using a third-party provider like favicon.io.\nIcon assets should be placed directly in the static/ folder of your website and named as per the listing below. If you use favicon.io, these will be the filenames that are automatically generated for you, but you can provide your own assets if you wish.\nstatic/ ├─ android-chrome-192x192.png ├─ android-chrome-512x512.png ├─ apple-touch-icon.png ├─ favicon-16x16.png ├─ favicon-32x32.png ├─ favicon.ico └─ site.webmanifest Alternatively, you can also completely override the default favicon behaviour and provide your own favicon HTML tags and assets. Simply provide a layouts/partials/favicons.html file in your project and this will be injected into the site \u0026lt;head\u0026gt; in place of the default assets.\nIcon #\rSimilar to the icon shortcode, you can include icons in your own templates and partials by using Congo\u0026rsquo;s icon.html partial. The partial takes one parameter which is the name of the icon to be included.\nExample:\n{{ partial \u0026#34;icon.html\u0026#34; \u0026#34;github\u0026#34; }} Icons are populated using Hugo pipelines which makes them very flexible. Congo includes a number of built-in icons for social, links and other purposes. Check the icon samples page for a full list of supported icons.\nCustom icons can be added by providing your own icon assets in the assets/icons/ directory of your project. The icon can then be referenced in the partial by using the SVG filename without the .svg extension.\nIcons can also be used in article content by calling the icon shortcode.\nExtensions #\rCongo also provides for a number of extension partials that allow for expanding upon base functionality.\nArticle link #\rIf you wish to insert additional code after article links, create a layouts/partials/extend-article-link.html file. This is especially powerful when combined with the badge shortcode which can be used to highlight metadata for certain articles.\nHead and Footer #\rThe theme allows for inserting additional code directly into the \u0026lt;head\u0026gt; and \u0026lt;footer\u0026gt; sections of the template. These can be useful for providing scripts or other logic that isn\u0026rsquo;t part of the theme.\nSimply create either layouts/partials/extend-head.html or layouts/partials/extend-footer.html and these will automatically be included in your website build. Both partials are injected as the last items in \u0026lt;head\u0026gt; and \u0026lt;footer\u0026gt; so they can be used to override theme defaults.\n","date":"10 August 2020","permalink":"/docs/partials/","section":"Documentation","summary":"","title":"Partials"},{"content":"If you\u0026rsquo;ve been reading the documentation in order, you should now know about all the features and configurations available in Congo. This page is designed to pull everything together and offer some worked examples that you might like to use in your Hugo project.\nTip: If you\u0026rsquo;re new to Hugo, be sure to check out the official docs to learn more about the concept of page bundles and resources.\rThe examples on this page can all be adapted to different scenarios but hopefully give you some ideas about how to approach formatting a particular content item for your individual project.\nBranch pages #\rBranch page bundles in Hugo cover items like the homepage, section listings, and taxonomy pages. The important thing to remember about branch bundles is that the filename for this content type is _index.md.\nCongo will honour the front matter parameters specified in branch pages and these will override the default settings for that particular page. For example, setting the title parameter in a branch page will allow overriding the page title.\nHomepage #\rLayout: layouts/index.html Content: content/_index.md The homepage in Congo is special in that it\u0026rsquo;s overarching design is controlled by the homepage layout config parameter. You can learn more about this in the Homepage Layout section.\nIf you want to add custom content to this page, you simply need to create a content/_index.md file. Anything in this file will then be included in your homepage.\nExample:\n--- title: \u0026#34;Welcome to Congo!\u0026#34; description: \u0026#34;This is a demo of adding content to the homepage.\u0026#34; --- Welcome to my website! I\u0026#39;m really happy you stopped by. This example sets a custom title and adds some additional text to the body of the page. Any Markdown formatted text is acceptable, including shortcodes, images and links.\nList pages #\rLayout: layouts/_default/list.html Content: content/../_index.md List pages group all the pages within into a section and provide a way for visitors to reach each page. A blog or portfolio are examples of a list page as they group together posts or projects.\nCreating a list page is as simple as making a sub-directory in the content folder. For example, to create a \u0026ldquo;Projects\u0026rdquo; section, you would create content/projects/. Then create a Markdown file for each of your projects.\nA list page will be generated by default, however to customise the content, you should also create an _index.md page in this new directory.\n. └── content └── projects ├── _index.md # /projects ├── first-project.md # /projects/first-project └── another-project ├── index.md # /projects/another-project └── project.jpg Hugo will generate URLs for the pages in your projects folder accordingly.\nJust like the homepage, content in the _index.md file will be output into the generated list index. Congo will then list any pages in this section below the content.\nExample:\n--- title: \u0026#34;Projects\u0026#34; description: \u0026#34;Learn about some of my projects.\u0026#34; cascade: showReadingTime: false --- This section contains all my current projects. In this example, the special cascade parameter is being used to hide the reading time on any sub-pages within this section. By doing this, any project pages will not have their reading time showing. This is a great way to override default theme parameters for an entire section without having to include them in every individual page.\nThe samples section of this site is an example of a list page.\nTaxonomy pages #\rList layout: layouts/_default/taxonomy.html Term layout: layouts/_default/term.html Content: content/../_index.md Taxonomy pages come in two forms - taxonomy lists and taxonomy terms. Lists display a listing of each of the terms within a given taxonomy, while terms display a list of pages that are related to a given term.\nThe terminology can get a little confusing so let\u0026rsquo;s explore an example using a taxonomy named animals.\nFirstly, to use taxonomies in Hugo, they have to be configured. This is done by creating a config file at config/_default/taxonomies.toml and defining the taxonomy name.\n# config/_default/taxonomies.toml animal = \u0026#34;animals\u0026#34; Hugo expects taxonomies to be listed using their singular and plural forms, so we add the singular animal equals the plural animals to create our example taxonomy.\nNow that our animals taxonomy exists, it needs to be added to individual content items. It\u0026rsquo;s as simple as inserting it into the front matter:\n--- title: \u0026#34;Into the Lion\u0026#39;s Den\u0026#34; description: \u0026#34;This week we\u0026#39;re learning about lions.\u0026#34; animals: [\u0026#34;lion\u0026#34;, \u0026#34;cat\u0026#34;] --- This has now created two terms within our animals taxonomy - lion and cat.\nAlthough it\u0026rsquo;s not obvious at this point, Hugo will now be generating list and term pages for this new taxonomy. By default the listing can be accessed at /animals/ and the term pages can be found at /animals/lion/ and /animals/cat/.\nThe list page will list all the terms contained within the taxonomy. In this example, navigating to /animals/ will show a page that has links for \u0026ldquo;lion\u0026rdquo; and \u0026ldquo;cat\u0026rdquo; which take visitors to the individual term pages.\nThe term pages will list all the pages contained within that term. These term lists are essentially the same as normal list pages and behave in much the same way.\nIn order to add custom content to taxonomy pages, simply create _index.md files in the content folder using the taxonomy name as the sub-directory name.\n. └── content └── animals ├── _index.md # /animals └── lion └── _index.md # /animals/lion Anything in these content files will now be placed onto the generated taxonomy pages. As with other content, the front matter variables can be used to override defaults. In this way you could have a tag named lion but override the title to be \u0026ldquo;Lion\u0026rdquo;.\nTo see how this looks in reality, check out the tags taxonomy listing on this site.\nLeaf pages #\rLayout: layouts/_default/single.html Content (standalone): content/../page-name.md Content (bundled): content/../page-name/index.md Leaf pages in Hugo are basically standard content pages. They are defined as pages that don\u0026rsquo;t contain any sub-pages. These could be things like an about page, or an individual blog post that lives in the blog section of the website.\nThe most important thing to remember about leaf pages is that unlike branch pages, leaf pages should be named index.md without an underscore. Leaf pages are also special in that they can be grouped together at the top level of the section and named with a unique name.\n. └── content └── blog ├── first-post.md # /blog/first-post ├── second-post.md # /blog/second-post └── third-post ├── index.md # /blog/third-post └── image.jpg When including assets in a page, like an image, a page bundle should be used. Page bundles are created using a sub-directory with an index.md file. Grouping the assets with the content in its own directory is important as many of the shortcodes and other theme logic assumes that resources are bundled alongside pages.\nExample:\n--- title: \u0026#34;My First Blog Post\u0026#34; date: 2022-01-25 description: \u0026#34;Welcome to my blog!\u0026#34; summary: \u0026#34;Learn more about me and why I am starting this blog.\u0026#34; tags: [\u0026#34;welcome\u0026#34;, \u0026#34;new\u0026#34;, \u0026#34;about\u0026#34;, \u0026#34;first\u0026#34;] --- _This_ is the content of my blog post. Leaf pages have a wide variety of front matter parameters that can be used to customise how they are displayed.\nExternal links #\rCongo has a special feature that allows links to external pages to appear alongside articles in the article listings. This is useful if you have content on third party websites like Medium, or research papers that you\u0026rsquo;d like to link to, without replicating the content in your Hugo site.\nIn order to create an external link article, some special front matter needs to be set:\n--- title: \u0026#34;My Medium post\u0026#34; date: 2022-01-25 externalUrl: \u0026#34;https://medium.com/\u0026#34; summary: \u0026#34;I wrote a post on Medium.\u0026#34; showReadingTime: false _build: render: \u0026#34;false\u0026#34; list: \u0026#34;local\u0026#34; --- Along with the normal front matter parameters like title and summary, the externalUrl parameter is used to tell Congo that this is not an ordinary article. The URL provided here will be where visitors are directed when they select this article.\nAdditionally, we use a special Hugo front matter parameter _build to prevent a normal page for this content being generated - there\u0026rsquo;s no point generating a page since we\u0026rsquo;re linking to an external URL!\nThe theme includes an archetype to make generating these external link articles simple. Just specify -k external when making new content.\nhugo new -k external posts/my-post.md Custom layouts #\rOne of the benefits of Hugo is that it makes it easy to create custom layouts for the whole site, individual sections or pages.\nLayouts follow all the normal Hugo templating rules and more information is available in the official Hugo docs.\nOverriding default layouts #\rEach of the content types discussed above lists the layout file that is used to generate each type of page. If this file is created in your local project it will override the theme template and thus can be used to customise the default style of the website.\nFor example, creating a layouts/_default/single.html file will allow the layout of leaf pages to be completely customised.\nCustom section layouts #\rIt is also simple to create custom layouts for individual content sections. This is useful when you want to make a section that lists a certain type of content using a particular style.\nLet\u0026rsquo;s step through an example that creates a custom \u0026ldquo;Projects\u0026rdquo; page that lists projects using a special layout.\nIn order to do this, structure your content using the normal Hugo content rules and create a section for your projects. Additionally, create a new layout for the projects section by using the same directory name as the content and adding a list.html file.\n. └── content │ └── projects │ ├── _index.md │ ├── first-project.md │ └── second-project.md └── layouts └── projects └── list.html This list.html file will now override the default list template, but only for the projects section. Before we look at this file, lets first look at the individual project files.\n--- title: \u0026#34;Congo\u0026#34; date: 2021-08-11 icon: \u0026#34;github\u0026#34; description: \u0026#34;A theme for Hugo built with Tailwind CSS.\u0026#34; topics: [\u0026#34;Hugo\u0026#34;, \u0026#34;Web\u0026#34;, \u0026#34;Tailwind\u0026#34;] externalUrl: \u0026#34;https://github.com/jpanther/congo/\u0026#34; --- In this example we are assigning some metadata for each project that we can then use in our list template. There\u0026rsquo;s no page content, but there\u0026rsquo;s nothing stopping you from including it. It\u0026rsquo;s your own custom template after all!\nWith the projects defined, now we can create a list template that outputs the details of each project.\n{{ define \u0026#34;main\u0026#34; }} \u0026lt;section class=\u0026#34;mt-8\u0026#34;\u0026gt; {{ range .Pages }} \u0026lt;article class=\u0026#34;pb-6\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;flex\u0026#34; href=\u0026#34;{{ .Params.externalUrl }}\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mr-3 text-3xl text-neutral-300\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;relative inline-block align-text-bottom\u0026#34;\u0026gt; {{ partial \u0026#34;icon.html\u0026#34; .Params.icon }} \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h3 class=\u0026#34;flex text-xl font-semibold\u0026#34;\u0026gt; {{ .Title }} \u0026lt;/h3\u0026gt; \u0026lt;p class=\u0026#34;text-sm text-neutral-400\u0026#34;\u0026gt; {{ .Description }} \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/article\u0026gt; {{ end }} \u0026lt;/section\u0026gt; {{ end }} Although this is quite a straightforward example, you can see that it steps through each of the pages in this section (ie. each project), and then outputs HTML links to each project alongside an icon. The metadata in the front matter for each project is used to determine which information is displayed.\nKeep in mind that you\u0026rsquo;ll need to ensure the relevant styles and classes are available, which may require the Tailwind CSS to be recompiled. This is discussed in more detail in the Advanced Customisation section.\nWhen making custom templates like this one, it\u0026rsquo;s always easiest to take a look at how the default Congo template works and then use that as a guide. Remember, the Hugo docs are a great resource to learn more about creating templates too.\n","date":"9 August 2020","permalink":"/docs/content-examples/","section":"Documentation","summary":"","title":"Content Examples"},{"content":"There are many ways you can make advanced changes to Congo. Read below to learn more about what can be customised and the best way of achieving your desired result.\nIf you need further advice, post your questions on GitHub Discussions.\nHugo project structure #\rBefore leaping into it, first a quick note about Hugo project structure and best practices for managing your content and theme customisations.\nIn summary: Never directly edit the theme files. Only make customisations in your Hugo project\u0026rsquo;s sub-directories, not in the themes directory itself.\rCongo is built to take advantage of all the standard Hugo practices. It is designed to allow all aspects of the theme to be customised and overriden without changing any of the core theme files. This allows for a seamless upgrade experience while giving you total control over the look and feel of your website.\nIn order to achieve this, you should never manually adjust any of the theme files directly. Whether you install using Hugo modules, as a git submodule or manually include the theme in your themes/ directory, you should always leave these files intact.\nThe correct way to adjust any theme behaviour is by overriding files using Hugo\u0026rsquo;s powerful file lookup order. In summary, the lookup order ensures any files you include in your project directory will automatically take precedence over any theme files.\nFor example, if you wanted to override the main article template in Congo, you can simply create your own layouts/_default/single.html file and place it in the root of your project. This file will then override the single.html from the theme without ever changing the theme itself. This works for any theme files - HTML templates, partials, shortcodes, config files, data, assets, etc.\nAs long as you follow this simple practice, you will always be able to update the theme (or test different theme versions) without worrying that you will lose any of your custom changes.\nColour schemes #\rCongo ships with a number of colour schemes out of the box. To change the basic colour scheme, you can set the colorScheme theme parameter. Refer to the Getting Started section to learn more about the built-in schemes.\nIn addition to the default schemes, you can also create your own and re-style the entire website to your liking. Schemes are created by by placing a \u0026lt;scheme-name\u0026gt;.css file in the assets/css/schemes/ folder. Once the file is created, simply refer to it by name in the theme configuration.\nCongo defines a three-colour palette that is used throughout the theme. The three colours are defined as neutral, primary and secondary variants, each containing ten shades of colour.\nDue to the way Tailwind CSS 3.0 calculates colour values with opacity, the colours specified in the scheme need to conform to a particular format by providing the red, green and blue colour values.\n:root { --color-primary-500: 139, 92, 246; } This example defines a CSS variable for the primary-500 colour with a red value of 139, green value of 92 and blue value of 246.\nUse one of the existing theme stylesheets as a template. You are free to define your own colours, but for some inspiration, check out the official Tailwind colour palette reference.\nOverriding the stylesheet #\rSometimes you need to add a custom style to style your own HTML elements. Congo provides for this scenario by allowing you to override the default styles in your own CSS stylesheet. Simply create a custom.css file in your project\u0026rsquo;s assets/css/ folder.\nThe custom.css file will be minified by Hugo and loaded automatically after all the other theme styles which means anything in your custom file will take precedence over the defaults.\nAdjusting the font size #\rChanging the font size of your website is one example of overriding the default stylesheet. Congo makes this simple as it uses scaled font sizes throughout the theme which are derived from the base HTML font size. By default, Tailwind sets the default size to 12pt, but it can be changed to whatever value you prefer.\nCreate a custom.css file using the instructions above and add the following CSS declaration:\n/* Increase the default font size */ html { font-size: 13pt; } Simply by changing this one value, all the font sizes on your website will be adjusted to match this new size. Therefore, to increase the overall font sizes used, make the value greater than 12pt. Similarly, to decrease the font sizes, make the value less than 12pt.\nBuilding the theme CSS from source #\rIf you\u0026rsquo;d like to make a major change, you can take advantage of Tailwind CSS\u0026rsquo;s JIT compiler and rebuild the entire theme CSS from scratch. This is useful if you want to adjust the Tailwind configuration or add extra Tailwind classes to the main stylesheet.\nNote: Building the theme manually is intended for advanced users.\rLet\u0026rsquo;s step through how building the Tailwind CSS works.\nTailwind configuration #\rIn order to generate a CSS file that only contains the Tailwind classes that are actually being used the JIT compiler needs to scan through all the HTML templates and Markdown content files to check which styles are present in the markup. The compiler does this by looking at the tailwind.config.js file which is included in the root of the theme directory:\n// themes/congo/tailwind.config.js module.exports = { content: [ \u0026#34;./layouts/**/*.html\u0026#34;, \u0026#34;./content/**/*.{html,md}\u0026#34;, \u0026#34;./themes/congo/layouts/**/*.html\u0026#34;, \u0026#34;./themes/congo/content/**/*.{html,md}\u0026#34;, ], // and more... }; This default configuration has been included with these content paths so that you can easily generate your own CSS file without needing to modify it, provided you follow a particular project structure. Namely, you have to include Congo in your project as a subdirectory at themes/congo/. This means you cannot easily use Hugo Modules to install the theme and you must go down either the git submodule (recommended) or manual install routes. The Installation docs explain how to install the theme using either of these methods.\nProject structure #\rIn order to take advantage of the default configuration, your project should look something like this\u0026hellip;\n. ├── assets │ └── css │ └── compiled │ └── main.css # this is the file we will generate ├── config # site config │ └── _default ├── content # site content │ ├── _index.md │ ├── projects │ │ └── _index.md │ └── blog │ └── _index.md ├── layouts # custom layouts for your site │ ├── partials │ │ └── extend-article-link.html │ ├── projects │ │ └── list.html │ └── shortcodes │ └── disclaimer.html └── themes └── congo # git submodule or manual theme install This example structure adds a new projects content type with its own custom layout along with a custom shortcode and extended partial. Provided the project follows this structure, all that\u0026rsquo;s required is to recompile the main.css file.\nInstall dependencies #\rIn order for this to work you\u0026rsquo;ll need to change into the themes/congo/ directory and install the project dependencies. You\u0026rsquo;ll need npm on your local machine for this step.\ncd themes/congo npm install Run the Tailwind compiler #\rWith the dependencies installed all that\u0026rsquo;s left is to use Tailwind CLI to invoke the JIT compiler. Navigate back to the root of your Hugo project and issue the following command:\ncd ../.. ./themes/congo/node_modules/tailwindcss/lib/cli.js -c ./themes/congo/tailwind.config.js -i ./themes/congo/assets/css/main.css -o ./assets/css/compiled/main.css --jit It\u0026rsquo;s a bit of an ugly command due to the paths involved but essentially you\u0026rsquo;re calling Tailwind CLI and passing it the location of the Tailwind config file (the one we looked at above), where to find the theme\u0026rsquo;s main.css file and then where you want the compiled CSS file to be placed (it\u0026rsquo;s going into the assets/css/compiled/ folder of your Hugo project).\nThe config file will automatically inspect all the content and layouts in your project as well as all those in the theme and build a new CSS file that contains all the CSS required for your website. Due to the way Hugo handles file hierarchy, this file in your project will now automatically override the one that comes with the theme.\nEach time you make a change to your layouts and need new Tailwind CSS styles, you can simply re-run the command and generate the new CSS file. You can also add -w to the end of the command to run the JIT compiler in watch mode.\nMake a build script #\rTo fully complete this solution, you can simplify this whole process by adding aliases for these commands, or do what I do and add a package.json to the root of your project which contains the necessary scripts\u0026hellip;\n// package.json { \u0026#34;name\u0026#34;: \u0026#34;my-website\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;server\u0026#34;: \u0026#34;hugo server -b http://localhost -p 8000\u0026#34;, \u0026#34;dev\u0026#34;: \u0026#34;NODE_ENV=development ./themes/congo/node_modules/tailwindcss/lib/cli.js -c ./themes/congo/tailwind.config.js -i ./themes/congo/assets/css/main.css -o ./assets/css/compiled/main.css --jit -w\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;NODE_ENV=production ./themes/congo/node_modules/tailwindcss/lib/cli.js -c ./themes/congo/tailwind.config.js -i ./themes/congo/assets/css/main.css -o ./assets/css/compiled/main.css --jit\u0026#34; }, // and more... } Now when you want to work on designing your site, you can invoke npm run dev and the compiler will run in watch mode. When you\u0026rsquo;re ready to deploy, run npm run build and you\u0026rsquo;ll get a clean Tailwind CSS build.\n🙋‍♀️ If you need help, feel free to ask a question on GitHub Discussions.\n","date":"8 August 2020","permalink":"/docs/advanced-customisation/","section":"Documentation","summary":"","title":"Advanced Customisation"},{"content":"There are many ways to deploy your Hugo website built with Congo. The theme is designed to be flexible in almost any deployment scenario.\nCongo is built using relative URLs throughout the theme. This enables sites to easily be deployed to sub-folders and hosts like GitHub Pages. There\u0026rsquo;s usually no special configuration required for this to work as long as the baseURL parameter has been configured in the config.toml file.\nThe official Hugo Hosting and Deployment docs are the best place to learn how to deploy your site. The sections below contain some specific theme configuration details that can help you deploy smoothly with certain providers.\nChoose your provider:\nGitHub Pages Netlify Render Shared hosting, VPS or private web server GitHub Pages #\rGitHub allows hosting on GitHub Pages using Actions. To enable this functionality, enable Pages on your repo and create a new Actions workflow to build and deploy your site.\nThe file needs to be in YAML format, placed within the .github/workflows/ directory of your GitHub repository and named with a .yml extension.\n# .github/workflows/gh-pages.yml name: GitHub Pages on: push: branches: - main # change to the branch name for your project jobs: build-deploy: runs-on: ubuntu-20.04 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - name: Checkout uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;latest\u0026#34; - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == \u0026#39;refs/heads/main\u0026#39; }} with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-pages publish_dir: ./public Push the config file to GitHub and the action should automatically run. It may fail the first time and you\u0026rsquo;ll need to visit the Settings \u0026gt; Pages section of your GitHub repo to check the source is correct. It should be set to use the gh-pages branch.\nOnce the settings are configured, re-run the action and the site should build and deploy correctly. You can consult the actions log to check everything deployed successfully.\nNetlify #\rTo deploy to Netlify, create a new continuous deployment site and link it to your source code. The build settings can be left blank in the Netlify UI. You will only need to configure the domain you\u0026rsquo;ll be using.\nThen in the root of your site repository, create a netlify.toml file:\n# netlify.toml [build] command = \u0026#34;hugo mod get -u \u0026amp;\u0026amp; hugo --gc --minify -b $URL\u0026#34; publish = \u0026#34;public\u0026#34; [build.environment] NODE_ENV = \u0026#34;production\u0026#34; GO_VERSION = \u0026#34;1.16\u0026#34; TZ = \u0026#34;UTC\u0026#34; # Set to preferred timezone [context.production.environment] HUGO_VERSION = \u0026#34;0.87.0\u0026#34; HUGO_ENV = \u0026#34;production\u0026#34; This configuration assumes you are deploying Congo as a Hugo module. If you have installed the theme using another method, change the build command to simply hugo --gc --minify -b $URL.\nWhen you push the config file to your repo, Netlify should automatically deploy your site. You can check the deploy logs in the Netlify UI to check for any errors.\nRender #\rDeploying to Render is very straightforward and all configuration is via the Render UI.\nCreate a new Static Site and link it to your project\u0026rsquo;s code repository. Then simply configure the build command to be hugo --gc --minify and publish directory to be public.\nThe site will automatically build and deploy whenever you push a change to your repo.\nShared hosting, VPS or private web server #\rUsing traditional web hosting, or deploying to your own web server, is as simple as building your Hugo site and transferring the files to your host.\nMake sure that the baseURL parameter in config.toml is set to the full URL to the root of your website (including any sub domains or sub-folders).\nThen build your site using hugo and copy the contents of the output directory to the root of your web server and you will be ready to go. By default, the output directory is named public.\nIf you need a hosting provider, check out Vultr or DigitalOcean. Signing up using these affiliate links will give you up to $100 in free credit so you can try the service.\n","date":"7 August 2020","permalink":"/docs/hosting-deployment/","section":"Documentation","summary":"","title":"Hosting \u0026 Deployment"},{"content":"\rThe Pillars of Earth A medieval Cathedral is built in England in the midst of a lot of personal drama. Absolute page-turner.\nFirst Man The story of Neil Armstrong.\nA strangeness in my mind A drink seller in Istanbul watches the city change around him.\nThe Reading List #\rGrow, cook, eat : a GIY guide to growing and cooking your own food / Michael Kelly ; edited by Cristíona Kiely. Mr. Hire\u0026rsquo;s engagement / Georges Simenon ; translated by Anna Moschovakis. Urban garden design : transform your outdoor space into a beautiful and practical escape / Kate Gould. The pillars of the Earth / Ken Follett. Origin / Dan Brown. The killing joke : Batman / Alan Moore ; llustrated by Brian Bolland. A strangeness in my mind / Orhan Pamuk ; translated from the Turkish by Ekin Oklap. Fall, or dodge in hell / Neal Stephenson. Che Guevara / Jon Lee Anderson ; illustrated by José Hernández. The secret books / Marcel Theroux. First man : the life of Neil A. Armstrong / James R. Hansen. The wicked healthy cookbook / Chad Sarno, Derek Sarno. Magnificent desolation : the long journey home from the moon / Buzz Aldrin with Ken Abraham. The value of everything : making and taking in the global economy / Mariana Mazzucato. The electric state / Simon Stålenhag. The undoing project : a friendship that changed the world / Michael Lewis. Victorian murders / Jan Bondeson. A mind for numbers : how to excel at math and science (even if you flunked algebra) / Barbara Oakley, PhD. Nimona / Noelle Stevenson. Thin air / Richard Morgan. The empathy instinct : how to create a more civil society / Peter Bazalgette. The Sandman : overture deluxe edition / Neil Gaiman ; illustrated by JH Williams III. The market gardener : a successful grower\u0026rsquo;s handbook for small-scale organic farming / Jean-Martin Fortier Munich / Robert Harris. Altered carbon / Richard Morgan. ","date":"31 December 2019","permalink":"/journal/2019/","section":"Journal","summary":"The Pillars of Earth, First Man and A Strangeness in my Mind","title":"2019"},{"content":"This article offers a sample of basic Markdown formatting that can be used in Congo, also it shows how some basic HTML elements are decorated.\nHeadings #\rThe following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 #\rH2 #\rH3 #\rH4 #\rH5 #\rH6 #\rParagraph #\rXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes #\rThe blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution #\rTiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution #\rDon\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables #\rTables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables #\rItalics Bold Code italics bold code Code Blocks #\rCode block with backticks #\r\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces #\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode #\r1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types #\rOrdered List #\rFirst item Second item Third item Unordered List #\rList item Another item And another item Nested list #\rFruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark #\rGIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk about nothing during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 March 2019","permalink":"/samples/markdown/","section":"Content Samples","summary":"\u003cp\u003eThis article offers a sample of basic Markdown formatting that can be used in Congo, also it shows how some basic HTML elements are decorated.\u003c/p\u003e","title":"Markdown"},{"content":"Hugo ships with several built-in shortcodes for rich content, along with a privacy config and a set of simple shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube #\rBelow is an example using the built-in youtube shortcode.\nTwitter #\rThis example uses the twitter_simple shortcode to output a Tweet. It requires two named parameters user and id.\n“In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Design Reviewed | Graphic Design History (@DesignReviewed) January 17, 2019 Alternatively, the tweet shortcode can be used to embed a fully marked up Twitter card.\nGist #\rThe gist shortcode can be used to embed a GitHub Gist. It requires two unnamed parameters: the username and ID of the Gist.\nVimeo #\rThe vimeo_simple shortcode will embed a Vimeo video.\n","date":"10 March 2019","permalink":"/samples/rich-content/","section":"Content Samples","summary":"This is an \u003cem\u003eexample\u003c/em\u003e of a \u003cstrong\u003erich\u003c/strong\u003e content summary.","title":"Rich Content"},{"content":"KaTeX can be used to render mathematical notation within articles.\nCongo will only bundle the KaTeX assets into your project if you make use of mathematical notation. In order for this to work, simply include the katex shortcode within the article. Any KaTeX syntax on that page will then be automatically rendered.\nUse the online reference of supported TeX functions for the available syntax.\nInline notation #\rInline notation can be generated by wrapping the expression in \\\\( and \\\\) delimiters.\nExample:\n% KaTeX inline notation Inline notation: \\\\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\\\) Inline notation: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\)\nBlock notation #\rAlternatively, block notation can be generated using $$ delimiters. This will output the expression in its own HTML block.\nExample:\n% KaTeX block notation $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"8 March 2019","permalink":"/samples/mathematical-notation/","section":"Content Samples","summary":"\u003cp\u003eKaTeX can be used to render mathematical notation within articles.\u003c/p\u003e","title":"Mathematical notation"},{"content":"Congo includes support for Chart.js using the chart shortcode. Simply wrap the chart markup within the shortcode. Congo automatically themes charts to match the configured colorScheme parameter, however the colours can be customised using normal Chart.js syntax.\nRefer to the chart shortcode docs for more details.\nThe examples below are a small selection taken from the official Chart.js docs. You can also view the page source on GitHub to see the markup.\nBar chart #\rLine chart #\rDoughnut chart #\r","date":"6 March 2019","permalink":"/samples/charts/","section":"Content Samples","summary":"Congo includes Chart.js for powerful charts and data visualisations.","title":"Charts"},{"content":"Mermaid diagrams are supported in Congo using the mermaid shortcode. Simply wrap the diagram markup within the shortcode. Congo automatically themes Mermaid diagrams to match the configured colorScheme parameter.\nRefer to the mermaid shortcode docs for more details.\nThe examples below are a small selection taken from the official Mermaid docs. You can also view the page source on GitHub to see the markup.\nFlowchart #\rgraph TD\rA[Christmas] --\u003e|Get money| B(Go shopping)\rB --\u003e C{Let me think}\rB --\u003e G[/Another/]\rC ==\u003e|One| D[Laptop]\rC --\u003e|Two| E[iPhone]\rC --\u003e|Three| F[Car]\rsubgraph Section\rC\rD\rE\rF\rG\rend\rSequence diagram #\rsequenceDiagram\rautonumber\rpar Action 1\rAlice-\u003e\u003eJohn: Hello John, how are you?\rand Action 2\rAlice-\u003e\u003eBob: Hello Bob, how are you?\rend\rAlice-\u003e\u003e+John: Hello John, how are you?\rAlice-\u003e\u003e+John: John, can you hear me?\rJohn--\u003e\u003e-Alice: Hi Alice, I can hear you!\rNote right of John: John is perceptive\rJohn--\u003e\u003e-Alice: I feel great!\rloop Every minute\rJohn--\u003eAlice: Great!\rend\rClass diagram #\rclassDiagram\rAnimal \"1\" \u003c|-- Duck\rAnimal \u003c|-- Fish\rAnimal \u003c--o Zebra\rAnimal : +int age\rAnimal : +String gender\rAnimal: +isMammal()\rAnimal: +mate()\rclass Duck{\r+String beakColor\r+swim()\r+quack()\r}\rclass Fish{\r-int sizeInFeet\r-canEat()\r}\rclass Zebra{\r+bool is_wild\r+run()\r}\rEntity relationship diagram #\rerDiagram\rCUSTOMER }|..|{ DELIVERY-ADDRESS : has\rCUSTOMER ||--o{ ORDER : places\rCUSTOMER ||--o{ INVOICE : \"liable for\"\rDELIVERY-ADDRESS ||--o{ ORDER : receives\rINVOICE ||--|{ ORDER : covers\rORDER ||--|{ ORDER-ITEM : includes\rPRODUCT-CATEGORY ||--|{ PRODUCT : contains\rPRODUCT ||--o{ ORDER-ITEM : \"ordered in\"\r","date":"6 March 2019","permalink":"/samples/diagrams-flowcharts/","section":"Content Samples","summary":"It\u0026rsquo;s easy to add diagrams and flowcharts to articles using Mermaid.","title":"Diagrams and Flowcharts"},{"content":"Emoji is supported throughout Congo by default. Emoji can be used in titles, menu items and article content.\nNote: The rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack.\rEmoji replacements are automatic throughout Congo, so you can use shorthand codes in your content and front matter and they will be converted to their corresponding symbols at build time.\nExample: see_no_evil 🙈, hear_no_evil 🙉, speak_no_evil 🙊.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n","date":"5 March 2019","permalink":"/samples/emoji/","section":"Content Samples","summary":"📖🏞️🧗🏽🐉🧙🏽‍♂️🧚🏽👸","title":"Emoji 🪂"},{"content":"\rHostage A graphic novel telling the true story of a Doctors Without Borders administrator, kidnapped and held in solitary confinement for 3 months.\nHidden figures The women who contributed to the space race.\nThe Reading List #\rApollo / written by Matt Fitch \u0026amp; Chris Baker ; illustrated by Mike Collins ; letters, Ian Sharman ; colours, Kris Carter \u0026amp; Jason Cardy. My friend Dahmer : a graphic novel / by Derf Backderf. Man up : boys, men and breaking the male rules / Rebecca Asher. Modern art / Amy Dempsey. The last children of Tokyo / Yoko Tawada. / translated by Margaret Mitsutani. Black hole / Charles Burns. Cognitive behavioural therapy for dummies / by Rhena Branch and Rob Willson. The princess diarist / Carrie Fisher. Explore Madrid : Insight guides. Salt, fat, acid, heat : the four elements of good cooking / Samin Nosrat. Non-violent communication : a language of life. Roughneck / Jeff Lemire. Spon : a guide to spoon carving and the new wood culture / Barn The Spoon. Vienna / this edition written and researched by Catherine Le Nevez, Kerry Christiani, Donna Wheeler. Ico : castle in the mist. Miyabe, Miyuki. Chernobyl 01:23:40 / Andrew Leatherbarrow. Solar bones / Mike McCormack. The alienist / Caleb Carr. The devotion of suspect X / Keigo Higashino ; translated by Alexander O. Smith with Elye J. Alexander. Women in space : 23 stories of first flights, scientific missions, and gravity-breaking adventures / Karen Bush Gibson. Working wood 1 \u0026amp; 2 : the artisan course / with Paul Sellers. The heart goes last / Margaret Atwood. The man who mistook his wife for a hat / Oliver Sacks. DK Eyewitness Vienna. The Esquimaux / Tom Tivnan. Righteous / Joe Ide. The power of habit : why we do what we do and how to change / Charles Duhigg. Healing back pain : the mind-body connection / John E. Sarno. Man\u0026rsquo;s search for meaning : the classic tribute to hope from the Holocaust / Viktor E. Frankl ; with a new forward by Martin Gilbert. St Petersburg. Masters, Tom. Heroes of the frontier / Dave Eggers. Hidden figures : the untold story of the African American women who helped win the space race / Margot Lee Shetterly. Greenhouses and garden sheds : inspiration, information and step-by-step projects / Pat Price with Nora Richter Greer. Remote : office not required / Jason Fried \u0026amp; David Heinemeier Hansson. Learn to remember : train your brain for peak performance, discover untapped memory powers, develop instant recall, never forget names, faces and numbers / Dominic O\u0026rsquo;Brien. Hostage / Guy Delisle ; translated by Helge Dascher. Death\u0026rsquo;s end / Cixin Liu ; translated by Ken Liu. The killing II / David Hewson ; based on the BAFTA award-winning TV series written by Soren Sveistrup. The voyeurs / Gabrielle Bell. The rise and fall of D.O.D.O. / Neal Stephenson, Nicole Galland. 11.22.63 / Stephen King. Dictator / Robert Harris. ","date":"31 December 2018","permalink":"/journal/2018/","section":"Journal","summary":"Hostage and Hidden Figures","title":"2018"},{"content":"\rA little life and The people in the trees by Hanya Yanagihara. Both books are sometimes grim, always interesting and incredibly well written.\nHow children succeed How can children overcome difficulties and develop perseverance, curiosity and self-control?\nWe need to talk about Kevin Terrifying, tense.\nThe fortunes of Africa\nThe killing Novelisation of the hit series, an excellent whodunnit.\nFictions by Jorge Luis Borges. Fantastic short stories.\nThe handmaid\u0026rsquo;s tale\nThe goldfinch\nThe case for working with your hands\nThe Reading List #\rThe kingdom / Fuminori Nakamura ; translated by Kalau Almony. Walkaway / Cory Doctorow. A little life / Hanya Yanagihara. Plugged / Eoin Colfer. How children succeed : grit, curiosity, and the hidden power of character / Paul Tough. Top 10 Algarve. Bernhardt, Paul. Berlitz Algarve pocket guide The dark forest / Cixin Liu ; translated by Joel Martinsen. The people in the trees / Hanya Yanagihara. H is for hawk / Helen Macdonald. Six four / Hideo Yokoyama ; translated from the Japanese by Jonathan Lloyd-Davies. A general theory of oblivion / José Eduardo Agualusa ; translated from the Portuguese by Daniel Hahn. Northern lights / Philip Pullman. Perfume : the story of a murderer / Patrick Suskind ; translated by John E. Woods. The war of art : break through the blocks and win your inner creative battles / Steven Pressfield. The three-body problem / Cixin Liu ; translated by Ken Liu. We need to talk about Kevin / Lionel Shriver ; introduction by Kate Mosse. The heart of darkness : and, Youth / Joseph Conrad ; with an introduction by Tim Butcher. Moby-Dick : or, the whale / Herman Melville. The fortunes of Africa : a 5,000-year history of wealth, greed and endeavour / Martin Meredith. Victorian London : the life of a city, 1840-1870 / Liza Picard. The killing / David Hewson ; based on the Bafta Award-winning TV series written by Søren Sveistrup. Humboldt\u0026rsquo;s gift / Saul Bellow. The life-changing magic of tidying / Marie Kondo ; translated from the Japanese by Cathy Hirano. The girl in the spider\u0026rsquo;s web / David Lagercrantz; translated from the Swedish by George Goulding. New York City / written and researched by Martin Dunford, Stephen Keeling and Andrew Rosenberg. New York City / this edition written and researched by Regis St Louis, Cristian Bonetto. Tales from the therapy room : shrink-wrapped / Phil Lapworth. And the weak suffer what they must? / Yanis Varoufakis. Fictions / Jorge Luis Borges ; translated with an afterword by Andrew Hurley. The chimes / Anna Smaill. Secret Speech. Smith, Tom Rob The handmaid\u0026rsquo;s tale / Margaret Atwood. The goldfinch / Donna Tartt. The case for working with your hands : or why office work is bad for us and fixing things feels good / Matthew Crawford. The Trachtenberg Speed System of Basic Mathematics / translated and adapted by Ann Cutler and Rudolph McShane. ","date":"31 December 2017","permalink":"/journal/2017/","section":"Journal","summary":"A Little Life, The Goldfinch, The Handmaid\u0026rsquo;s Tale and others","title":"2017"},{"content":"\rThe immortal life of Henrietta Lacks The amazing life of some cell samples taken from a dying woman without her permission.\nThe farm Retiring to a farm in Sweden a mother can\u0026rsquo;t convince those around her of what she\u0026rsquo;s seen.\nThe big short Explaining financial disaster in an entertaining way.\nThe strange case of Thomas Quick A genuinely mind-bending tale of Sweden\u0026rsquo;s worst serial killer.\nThe Reading List #\rThe immortal life of Henrietta Lacks / Rebecca Skloot. Top 10 Algarve. Bernhardt, Paul. Hitch-22 : a memoir / Christopher Hitchens. Richard III : manga Shakespeare/ adapted by Richard Appignanesi ; illustrated by Patrick Warren. The wolf of Wall Street / Jordan Belfort. The world\u0026rsquo;s greatest company : the story of Tata / Peter Casey ; illustrations by Mike Luckovich. How to build a billion dollar app : discover the secrets of the most successful entrepreneurs of our time / George Berkowski. The design of everyday things / Donald A. Norman. Finding your element : how to discover your talents and passions and transform your life / Ken Robinson and Lou Aronica. All the pretty horses / Cormac McCarthy. The night manager / John Le Carré. Lean in : women, work, and the will to lead / Sheryl Sandberg. Our kind of traitor / John le Carré. The green road / Anne Enright. The end of days / Jenny Erpenbeck ; translated from the German by Susan Bernofsky. Eastern Europe / this edition written and researched by Tom Masters\u0026hellip;et al.. The farm / Tom Rob Smith. Parade / Shuichi Yoshida ; translated from the Japanese by Philip Gabriel. Our Lady of the Nile / Scholastique Mukasonga ; translated from the French by Melanie Mauthner. Alan Turing : The enigma : The book that inspired the film \u0026lsquo;The Imitation Game\u0026rsquo; / by Andrew Hodges. Portugal : eyewitness travel guide / main contributor Martin Symington \u0026hellip; [et al.]. Tipperary folk tales / Aideen McBride. The dirty dust: =cré na cille / Máirtín Ó Cadhain ; translated from the Irish by Alan Titley European city breaks / (editor: Sophie Blacksell Jones). Your fathers, where are they? And the prophets, do they live forever? : a novel / Dave Eggers. The big short : inside the doomsday machine / Michael Lewis. Super better : a revolutionary approach to getting stronger, happier, braver and more resilient / Jane McGonigal. The machine that changed the world: the sotry of lean production-Toyota\u0026rsquo;s secret weapon in global car wars that is revolutionizing world industry / James P. Womack, Daniel T. Jones \u0026amp; Daniel Roos. Men explain things to me / Rebecca Solnit. Too big to fail : inside the battle to save Wall Street / Andrew Ross Sorkin. Child 44 / Tom Rob Smith. Doing good better : effective altruism and a radical new way to make a difference / William MacAskill. The strange case of Thomas Quick : the Swedish serial killer and the psychoanalyst who created him / Dan Josefsson ; translated from the Swedish by Anna Paterson. Naturalists in paradise : Wallace, Bates and Spruce in the Amazon / John Hemming. Single and single. Le Carré, John. Snow country / Yasunari Kawabata ; translated by Edward G. Seidensticker. ","date":"31 December 2016","permalink":"/journal/2016/","section":"Journal","summary":"The Immortal life of Henrietta Lacks and the Strange Case of Thomas Quick","title":"2016"},{"content":"\rJourney under the midnight sun opens with a murder case and follows numerous characters over the subsequent years as you slowly close in on the culprit. One of my favourite thrillers of all time.\nEinstein Looked up Walter Isaacson after reading his Steve Jobs biography and enjoyed this biography as well.\nThe Reading List #\rJohn le Carré : the biography / by Adam Sisman. Journey under the midnight sun / Keigo Higashino ; translated by Alexander O. Smith with Joseph Reeder. Einstein : his life and universe / by Walter Isaacson. Rocket team / by Frederick I. Ordway, Mitchell R. Sharpe ; foreword by Wernher von Braun. Apollo 13 / Jim Lovell \u0026amp; Jeffrey Kluger. Aurora / Kim Stanley Robinson. Life of a counterfeiter and other stories / Yasushi Inoue ; selected and translated by Michael Emmerich. Dune / Frank Herbert. ","date":"31 December 2015","permalink":"/journal/2015/","section":"Journal","summary":"Journey under the Midnight Sun and Einstein\u0026rsquo;s biography","title":"2015"},{"content":"\rLighthouse Report\rLighthouse report requires JavaScript. Please enable.\r0–49\r50–89\r90–100\rRuntime Settings\rGenerated by Lighthouse |\rFile an issue\rShow 3rd party resources ()\rhttp://localhost:8008/congo/samples/emoji/\rPrint Summary\rPrint Expanded\rCopy JSON\rSave as HTML\rSave as JSON\rOpen in Viewer\rSave as Gist\rToggle Dark Theme\r100\rPerformance\r100\rAccessibility\r100\rBest Practices\r100\rSEO\rProgressive Web App\r100\rPerformance\r100\rAccessibility\r100\rBest Practices\r100\rSEO\rProgressive Web App\r0–49\r50–89\r90–100\r100\rPerformance\rMetrics\rFirst Contentful Paint\r1.4\u0026nbsp;s\rFirst Contentful Paint marks the time at which the first text or image is painted. Learn more.\rSpeed Index\r1.4\u0026nbsp;s\rSpeed Index shows how quickly the contents of a page are visibly populated. Learn more.\rLargest Contentful Paint\r1.5\u0026nbsp;s\rLargest Contentful Paint marks the time at which the largest text or image is painted. Learn more\rTime to Interactive\r1.4\u0026nbsp;s\rTime to interactive is the amount of time it takes for the page to become fully interactive. Learn more.\rTotal Blocking Time\r10\u0026nbsp;ms\rSum of all time periods between FCP and Time to Interactive, when task length exceeded 50ms, expressed in milliseconds. Learn more.\rCumulative Layout Shift\r0\rCumulative Layout Shift measures the movement of visible elements within the viewport. Learn more.\rValues are estimated and may vary. The performance score is calculated directly from these metrics.See calculator.View TreemapShow audits relevant to:AllFCPLCPTBTCLSOpportunitiesThese suggestions can help your page load faster. They don't directly affect the Performance score.\rOpportunity\rEstimated Savings\rReduce unused CSS\r0.29\u0026nbsp;s\rReduce unused rules from stylesheets and defer CSS not used for above-the-fold content to decrease bytes consumed by network activity. Learn more.FCPLCP\rShow 3rd-party resources (0)\rURLTransfer SizePotential Savings…css/main.bundle.min.6783e34….css(localhost)39.7\u0026nbsp;KiB27.9\u0026nbsp;KiB\rReduce unused JavaScript\r0.15\u0026nbsp;s\rReduce unused JavaScript and defer loading scripts until they are required to decrease bytes consumed by network activity. Learn more.LCP\rShow 3rd-party resources (0)\rURLTransfer SizePotential Savings…js/main.bundle.min.81d5d44….js(localhost)27.2\u0026nbsp;KiB21.4\u0026nbsp;KiB\rDiagnosticsMore information about the performance of your application. These numbers don't directly affect the Performance score.\rAvoid chaining critical requests\r1 chain found\rThe Critical Request Chains below show you what resources are loaded with a high priority. Consider reducing the length of chains, reducing the download size of resources, or deferring the download of unnecessary resources to improve page load. Learn more.FCPLCP\rMaximum critical path latency: 20\u0026nbsp;ms\rInitial Navigation\r…samples/emoji(localhost)\r…css/main.bundle.min.6783e34….css(localhost) - 0\u0026nbsp;ms, 39.71\u0026nbsp;KiB\rKeep request counts low and transfer sizes small\r4 requests • 92 KiB\rTo set budgets for the quantity and size of page resources, add a budget.json file. Learn more.\rResource TypeRequestsTransfer SizeTotal491.7\u0026nbsp;KiBStylesheet139.7\u0026nbsp;KiBScript127.2\u0026nbsp;KiBDocument117.0\u0026nbsp;KiBImage17.7\u0026nbsp;KiBMedia00.0\u0026nbsp;KiBFont00.0\u0026nbsp;KiBOther00.0\u0026nbsp;KiBThird-party00.0\u0026nbsp;KiB\rLargest Contentful Paint element\r1 element found\rThis is the largest contentful element painted within the viewport. Learn MoreLCP\rElementNote: The rendering of these glyphs depends on the browser and the platform. To…\u0026lt;span class=\"dark:text-neutral-300\"\u0026gt;\rAvoid long main-thread tasks\r2 long tasks found\rLists the longest tasks on the main thread, useful for identifying worst contributors to input delay. Learn moreTBT\rShow 3rd-party resources (0)\rURLStart TimeDuration…samples/emoji(localhost)785\u0026nbsp;ms584\u0026nbsp;ms…samples/emoji(localhost)1,369\u0026nbsp;ms61\u0026nbsp;ms\rAvoid non-composited animations\r18 animated elements found\rAnimations which are not composited can be janky and increase CLS. Learn moreCLS\rElementName↓Skip to main content\u0026lt;a class=\"px-3 py-1 text-sm -translate-y-8 rounded-b-lg bg-primary-200 dark:bg-neutr…\" href=\"#main-content\"\u0026gt;Unsupported CSS Property: background-colorbackground-colorUnsupported CSS Property: colorcolorCongo\u0026lt;a class=\"hover:underline hover:decoration-primary-500 hover:decoration-2 hover:unde…\" rel=\"me\" href=\"/congo/\"\u0026gt;Unsupported CSS Property: colorcolorDocs\u0026lt;a class=\"hover:underline hover:decoration-primary-500 hover:decoration-2 hover:unde…\" href=\"/congo/docs/\"\u0026gt;Unsupported CSS Property: colorcolorSamples\u0026lt;a class=\"hover:underline hover:decoration-primary-500 hover:decoration-2 hover:unde…\" href=\"/congo/samples/\"\u0026gt;Unsupported CSS Property: colorcolorUsers\u0026lt;a class=\"hover:underline hover:decoration-primary-500 hover:decoration-2 hover:unde…\" href=\"/congo/users/\"\u0026gt;Unsupported CSS Property: colorcolorGitHub\u0026lt;a class=\"hover:underline hover:decoration-primary-500 hover:decoration-2 hover:unde…\" href=\"https://github.com/jpanther/congo\"\u0026gt;Unsupported CSS Property: colorcolorbutton\u0026lt;button id=\"search-button\" class=\"text-base hover:text-primary-600 dark:hover:text-primary-400\"\u0026gt;Unsupported CSS Property: colorcolorContent Samples\u0026lt;a class=\"hover:underline hover:decoration-neutral-300 dark:underline-neutral-600\" href=\"/congo/samples/\"\u0026gt;Unsupported CSS Property: colorcolorsite configuration\u0026lt;a href=\"http://localhost:8008/congo/docs/configuration/#site-configuration\"\u0026gt;Unsupported CSS Property: colorcolorUnsupported CSS Property: text-decoration-colortext-decoration-colorEmoji cheat sheet\u0026lt;a href=\"http://www.emoji-cheat-sheet.com/\"\u0026gt;Unsupported CSS Property: colorcolorUnsupported CSS Property: text-decoration-colortext-decoration-colorTwitter\u0026lt;a class=\"px-1 hover:text-primary-700 dark:hover:text-primary-400\" href=\"https://twitter.com/\" target=\"_blank\" aria-label=\"Twitter\" rel=\"me noopener noreferrer\"\u0026gt;Unsupported CSS Property: colorcolorFacebook\u0026lt;a class=\"px-1 hover:text-primary-700 dark:hover:text-primary-400\" href=\"https://facebook.com/\" target=\"_blank\" aria-label=\"Facebook\" rel=\"me noopener noreferrer\"\u0026gt;Unsupported CSS Property: colorcolorLinkedin\u0026lt;a class=\"px-1 hover:text-primary-700 dark:hover:text-primary-400\" href=\"https://linkedin.com/\" target=\"_blank\" aria-label=\"Linkedin\" rel=\"me noopener noreferrer\"\u0026gt;Unsupported CSS Property: colorcolorYoutube\u0026lt;a class=\"px-1 hover:text-primary-700 dark:hover:text-primary-400\" href=\"https://youtube.com/\" target=\"_blank\" aria-label=\"Youtube\" rel=\"me noopener noreferrer\"\u0026gt;Unsupported CSS Property: colorcolor←\rDiagrams and Flowcharts\r6 March 2019\u0026lt;a class=\"flex\" href=\"/congo/samples/diagrams-flowcharts/\"\u0026gt;Unsupported CSS Property: colorcolorbutton\u0026lt;button id=\"close-search-button\" class=\"flex items-center justify-center w-8 h-8 text-neutral-700 dark:text-neutra…\"\u0026gt;Unsupported CSS Property: colorcolorHugo\u0026lt;a class=\"hover:underline hover:decoration-primary-400 hover:text-primary-500\" href=\"https://gohugo.io/\" target=\"_blank\" rel=\"noopener noreferrer\"\u0026gt;Unsupported CSS Property: colorcolorCongo\u0026lt;a class=\"hover:underline hover:decoration-primary-400 hover:text-primary-500\" href=\"https://git.io/hugo-congo\" target=\"_blank\" rel=\"noopener noreferrer\"\u0026gt;Unsupported CSS Property: colorcolor\rPassed audits\r(28)\rEliminate render-blocking resources\rPotential savings of 0\u0026nbsp;ms\rResources are blocking the first paint of your page. Consider delivering critical JS/CSS inline and deferring all non-critical JS/styles. Learn more.FCPLCP\rShow 3rd-party resources (0)\rURLTransfer SizePotential Savings…css/main.bundle.min.6783e34….css(localhost)39.7\u0026nbsp;KiB480\u0026nbsp;ms\rProperly size images\rServe images that are appropriately-sized to save cellular data and improve load time. Learn more.\rDefer offscreen images\rConsider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to interactive. Learn more.\rMinify CSS\rMinifying CSS files can reduce network payload sizes. Learn more.FCPLCP\rMinify JavaScript\rMinifying JavaScript files can reduce payload sizes and script parse time. Learn more.FCPLCP\rEfficiently encode images\rOptimized images load faster and consume less cellular data. Learn more.\rServe images in next-gen formats\rImage formats like JPEG 2000, JPEG XR, and WebP often provide better compression than PNG or JPEG, which means faster downloads and less data consumption. Learn more.\rPreconnect to required origins\rConsider adding `preconnect` or `dns-prefetch` resource hints to establish early connections to important third-party origins. Learn more.FCPLCP\rInitial server response time was short\rRoot document took 0\u0026nbsp;ms\rKeep the server response time for the main document short because all other requests depend on it. Learn more.FCPLCP\rShow 3rd-party resources (0)\rURLTime Spent…samples/emoji(localhost)0\u0026nbsp;ms\rAvoid multiple page redirects\rRedirects introduce additional delays before the page can be loaded. Learn more.FCPLCP\rPreload key requests\rConsider using `\u0026lt;link rel=preload\u0026gt;` to prioritize fetching resources that are currently requested later in page load. Learn more.FCPLCP\rUse HTTP/2\rHTTP/2 offers many benefits over HTTP/1.1, including binary headers and multiplexing. Learn more.\rUse video formats for animated content\rLarge GIFs are inefficient for delivering animated content. Consider using MPEG4/WebM videos for animations and PNG/WebP for static images instead of GIF to save network bytes. Learn moreLCP\rRemove duplicate modules in JavaScript bundles\rRemove large, duplicate JavaScript modules from bundles to reduce unnecessary bytes consumed by network activity. TBT\rAvoid serving legacy JavaScript to modern browsers\rPotential savings of 0\u0026nbsp;KiB\rPolyfills and transforms enable legacy browsers to use new JavaScript features. However, many aren't necessary for modern browsers. For your bundled JavaScript, adopt a modern script deployment strategy using module/nomodule feature detection to reduce the amount of code shipped to modern browsers, while retaining support for legacy browsers. Learn MoreTBT\rShow 3rd-party resources (0)\rURLPotential Savings…js/main.bundle.min.81d5d44….js(localhost)0.2\u0026nbsp;KiB…js/main.bundle.min.81d5d44….js:1:2227(localhost)@babel/plugin-transform-classes\rPreload Largest Contentful Paint image\rPreload the image used by the LCP element in order to improve your LCP time. Learn more.LCP\rAvoids enormous network payloads\rTotal size was 92\u0026nbsp;KiB\rLarge network payloads cost users real money and are highly correlated with long load times. Learn more.LCP\rShow 3rd-party resources (0)\rURLTransfer Size…css/main.bundle.min.6783e34….css(localhost)39.7\u0026nbsp;KiB…js/main.bundle.min.81d5d44….js(localhost)27.2\u0026nbsp;KiB…samples/emoji(localhost)17.0\u0026nbsp;KiB/congo/author_hu052d24d…_54195_192x192_fill_q75_box_smart1.jpg(localhost)7.7\u0026nbsp;KiB\rAvoids an excessive DOM size\r120 elements\rA large DOM will increase memory usage, cause longer style calculations, and produce costly layout reflows. Learn more.TBT\rStatisticElementValueTotal DOM Elements120Maximum DOM Depthpath\u0026lt;path fill=\"currentcolor\" d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645.0 138.72-105.583 298.558-2…\"\u0026gt;12Maximum Child Elementsbody\u0026lt;body class=\"flex flex-col h-screen px-6 m-auto text-lg leading-7 bg-neutral text-neutr…\"\u0026gt;5\rUser Timing marks and measures\rConsider instrumenting your app with the User Timing API to measure your app's real-world performance during key user experiences. Learn more.\rJavaScript execution time\r0.0\u0026nbsp;s\rConsider reducing the time spent parsing, compiling, and executing JS. You may find delivering smaller JS payloads helps with this. Learn more.TBT\rShow 3rd-party resources (0)\rURLTotal CPU TimeScript EvaluationScript Parse…samples/emoji(localhost)1,411\u0026nbsp;ms4\u0026nbsp;ms1\u0026nbsp;ms\rMinimizes main-thread work\r1.5\u0026nbsp;s\rConsider reducing the time spent parsing, compiling and executing JS. You may find delivering smaller JS payloads helps with this. Learn moreTBT\rCategoryTime SpentStyle \u0026amp; Layout1,117\u0026nbsp;msRendering252\u0026nbsp;msOther53\u0026nbsp;msScript Evaluation20\u0026nbsp;msParse HTML \u0026amp; CSS8\u0026nbsp;msScript Parsing \u0026amp; Compilation3\u0026nbsp;ms\rAll text remains visible during webfont loads\rLeverage the font-display CSS feature to ensure text is user-visible while webfonts are loading. Learn more.FCPLCP\rMinimize third-party usage\rThird-party code can significantly impact load performance. Limit the number of redundant third-party providers and try to load third-party code after your page has primarily finished loading. Learn more.TBT\rLazy load third-party resources with facades\rSome third-party embeds can be lazy loaded. Consider replacing them with a facade until they are required. Learn more.TBT\rAvoid large layout shifts\rThese DOM elements contribute most to the CLS of the page.CLS\rUses passive listeners to improve scrolling performance\rConsider marking your touch and wheel event listeners as `passive` to improve your page's scroll performance. Learn more.\rAvoids document.write()\rFor users on slow connections, external scripts dynamically injected via `document.write()` can delay page load by tens of seconds. Learn more.\rImage elements have explicit width and height\rSet an explicit width and height on image elements to reduce layout shifts and improve CLS. Learn moreCLS\r100\rAccessibility\rThese checks highlight opportunities to improve the accessibility of your web app. Only a subset of accessibility issues can be automatically detected so manual testing is also encouraged.\rAdditional items to manually check\r(10)\rThese items address areas which an automated testing tool cannot cover. Learn more in our guide on conducting an accessibility review.\rThe page has a logical tab order\rTabbing through the page follows the visual layout. Users cannot focus elements that are offscreen. Learn more.\rInteractive controls are keyboard focusable\rCustom interactive controls are keyboard focusable and display a focus indicator. Learn more.\rInteractive elements indicate their purpose and state\rInteractive elements, such as links and buttons, should indicate their state and be distinguishable from non-interactive elements. Learn more.\rThe user's focus is directed to new content added to the page\rIf new content, such as a dialog, is added to the page, the user's focus is directed to it. Learn more.\rUser focus is not accidentally trapped in a region\rA user can tab into and out of any control or region without accidentally trapping their focus. Learn more.\rCustom controls have associated labels\rCustom interactive controls have associated labels, provided by aria-label or aria-labelledby. Learn more.\rCustom controls have ARIA roles\rCustom interactive controls have appropriate ARIA roles. Learn more.\rVisual order on the page follows DOM order\rDOM order matches the visual order, improving navigation for assistive technology. Learn more.\rOffscreen content is hidden from assistive technology\rOffscreen content is hidden with display: none or aria-hidden=true. Learn more.\rHTML5 landmark elements are used to improve navigation\rLandmark elements (\u0026lt;main\u0026gt;, \u0026lt;nav\u0026gt;, etc.) are used to improve the keyboard navigation of the page for assistive technology. Learn more.\rPassed audits\r(18)\r[aria-*] attributes match their roles\rEach ARIA `role` supports a specific subset of `aria-*` attributes. Mismatching these invalidates the `aria-*` attributes. Learn more.\r[aria-hidden=\"true\"] is not present on the document \u0026lt;body\u0026gt;\rAssistive technologies, like screen readers, work inconsistently when `aria-hidden=\"true\"` is set on the document `\u0026lt;body\u0026gt;`. Learn more.\r[aria-hidden=\"true\"] elements do not contain focusable descendents\rFocusable descendents within an `[aria-hidden=\"true\"]` element prevent those interactive elements from being available to users of assistive technologies like screen readers. Learn more.\r[aria-*] attributes have valid values\rAssistive technologies, like screen readers, can't interpret ARIA attributes with invalid values. Learn more.\r[aria-*] attributes are valid and not misspelled\rAssistive technologies, like screen readers, can't interpret ARIA attributes with invalid names. Learn more.\rButtons have an accessible name\rWhen a button doesn't have an accessible name, screen readers announce it as \"button\", making it unusable for users who rely on screen readers. Learn more.\rThe page contains a heading, skip link, or landmark region\rAdding ways to bypass repetitive content lets keyboard users navigate the page more efficiently. Learn more.\rBackground and foreground colors have a sufficient contrast ratio\rLow-contrast text is difficult or impossible for many users to read. Learn more.\rDocument has a \u0026lt;title\u0026gt; element\rThe title gives screen reader users an overview of the page, and search engine users rely on it heavily to determine if a page is relevant to their search. Learn more.\r[id] attributes on active, focusable elements are unique\rAll focusable elements must have a unique `id` to ensure that they're visible to assistive technologies. Learn more.\rHeading elements appear in a sequentially-descending order\rProperly ordered headings that do not skip levels convey the semantic structure of the page, making it easier to navigate and understand when using assistive technologies. Learn more.\r\u0026lt;html\u0026gt; element has a [lang] attribute\rIf a page doesn't specify a lang attribute, a screen reader assumes that the page is in the default language that the user chose when setting up the screen reader. If the page isn't actually in the default language, then the screen reader might not announce the page's text correctly. Learn more.\r\u0026lt;html\u0026gt; element has a valid value for its [lang] attribute\rSpecifying a valid BCP 47 language helps screen readers announce text properly. Learn more.\rImage elements have [alt] attributes\rInformative elements should aim for short, descriptive alternate text. Decorative elements can be ignored with an empty alt attribute. Learn more.\rLinks have a discernible name\rLink text (and alternate text for images, when used as links) that is discernible, unique, and focusable improves the navigation experience for screen reader users. Learn more.\rLists contain only \u0026lt;li\u0026gt; elements and script supporting elements (\u0026lt;script\u0026gt; and \u0026lt;template\u0026gt;).\rScreen readers have a specific way of announcing lists. Ensuring proper list structure aids screen reader output. Learn more.\rList items (\u0026lt;li\u0026gt;) are contained within \u0026lt;ul\u0026gt; or \u0026lt;ol\u0026gt; parent elements\rScreen readers require list items (`\u0026lt;li\u0026gt;`) to be contained within a parent `\u0026lt;ul\u0026gt;` or `\u0026lt;ol\u0026gt;` to be announced properly. Learn more.\r[user-scalable=\"no\"] is not used in the \u0026lt;meta name=\"viewport\"\u0026gt; element and the [maximum-scale] attribute is not less than 5.\rDisabling zooming is problematic for users with low vision who rely on screen magnification to properly see the contents of a web page. Learn more.\rNot applicable\r(26)\r[accesskey] values are unique\rAccess keys let users quickly focus a part of the page. For proper navigation, each access key must be unique. Learn more.\rbutton, link, and menuitem elements have accessible names\rWhen an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. Learn more.\rARIA input fields have accessible names\rWhen an input field doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. Learn more.\rARIA meter elements have accessible names\rWhen an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. Learn more.\rARIA progressbar elements have accessible names\rWhen an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. Learn more.\r[role]s have all required [aria-*] attributes\rSome ARIA roles have required attributes that describe the state of the element to screen readers. Learn more.\rElements with an ARIA [role] that require children to contain a specific [role] have all required children.\rSome ARIA parent roles must contain specific child roles to perform their intended accessibility functions. Learn more.\r[role]s are contained by their required parent element\rSome ARIA child roles must be contained by specific parent roles to properly perform their intended accessibility functions. Learn more.\r[role] values are valid\rARIA roles must have valid values in order to perform their intended accessibility functions. Learn more.\rARIA toggle fields have accessible names\rWhen a toggle field doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. Learn more.\rARIA tooltip elements have accessible names\rWhen an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. Learn more.\rARIA treeitem elements have accessible names\rWhen an element doesn't have an accessible name, screen readers announce it with a generic name, making it unusable for users who rely on screen readers. Learn more.\r\u0026lt;dl\u0026gt;'s contain only properly-ordered \u0026lt;dt\u0026gt; and \u0026lt;dd\u0026gt; groups, \u0026lt;script\u0026gt;, \u0026lt;template\u0026gt; or \u0026lt;div\u0026gt; elements.\rWhen definition lists are not properly marked up, screen readers may produce confusing or inaccurate output. Learn more.\rDefinition list items are wrapped in \u0026lt;dl\u0026gt; elements\rDefinition list items (`\u0026lt;dt\u0026gt;` and `\u0026lt;dd\u0026gt;`) must be wrapped in a parent `\u0026lt;dl\u0026gt;` element to ensure that screen readers can properly announce them. Learn more.\rARIA IDs are unique\rThe value of an ARIA ID must be unique to prevent other instances from being overlooked by assistive technologies. Learn more.\rNo form fields have multiple labels\rForm fields with multiple labels can be confusingly announced by assistive technologies like screen readers which use either the first, the last, or all of the labels. Learn more.\r\u0026lt;frame\u0026gt; or \u0026lt;iframe\u0026gt; elements have a title\rScreen reader users rely on frame titles to describe the contents of frames. Learn more.\r\u0026lt;input type=\"image\"\u0026gt; elements have [alt] text\rWhen an image is being used as an `\u0026lt;input\u0026gt;` button, providing alternative text can help screen reader users understand the purpose of the button. Learn more.\rForm elements have associated labels\rLabels ensure that form controls are announced properly by assistive technologies, like screen readers. Learn more.\rThe document does not use \u0026lt;meta http-equiv=\"refresh\"\u0026gt;\rUsers do not expect a page to refresh automatically, and doing so will move focus back to the top of the page. This may create a frustrating or confusing experience. Learn more.\r\u0026lt;object\u0026gt; elements have [alt] text\rScreen readers cannot translate non-text content. Adding alt text to `\u0026lt;object\u0026gt;` elements helps screen readers convey meaning to users. Learn more.\rNo element has a [tabindex] value greater than 0\rA value greater than 0 implies an explicit navigation ordering. Although technically valid, this often creates frustrating experiences for users who rely on assistive technologies. Learn more.\rCells in a \u0026lt;table\u0026gt; element that use the [headers] attribute refer to table cells within the same table.\rScreen readers have features to make navigating tables easier. Ensuring `\u0026lt;td\u0026gt;` cells using the `[headers]` attribute only refer to other cells in the same table may improve the experience for screen reader users. Learn more.\r\u0026lt;th\u0026gt; elements and elements with [role=\"columnheader\"/\"rowheader\"] have data cells they describe.\rScreen readers have features to make navigating tables easier. Ensuring table headers always refer to some set of cells may improve the experience for screen reader users. Learn more.\r[lang] attributes have a valid value\rSpecifying a valid BCP 47 language on elements helps ensure that text is pronounced correctly by a screen reader. Learn more.\r\u0026lt;video\u0026gt; elements contain a \u0026lt;track\u0026gt; element with [kind=\"captions\"]\rWhen a video provides a caption it is easier for deaf and hearing impaired users to access its information. Learn more.\r100\rBest Practices\rTrust and Safety\rEnsure CSP is effective against XSS attacks\rA strong Content Security Policy (CSP) significantly reduces the risk of cross-site scripting (XSS) attacks. Learn more\rDescriptionDirectiveSeverityNo CSP found in enforcement modeHigh\rPassed audits\r(17)\rUses HTTPS\rAll sites should be protected with HTTPS, even ones that don't handle sensitive data. This includes avoiding mixed content, where some resources are loaded over HTTP despite the initial request being served over HTTPS. HTTPS prevents intruders from tampering with or passively listening in on the communications between your app and your users, and is a prerequisite for HTTP/2 and many new web platform APIs. Learn more.\rLinks to cross-origin destinations are safe\rAdd `rel=\"noopener\"` or `rel=\"noreferrer\"` to any external links to improve performance and prevent security vulnerabilities. Learn more.\rAvoids requesting the geolocation permission on page load\rUsers are mistrustful of or confused by sites that request their location without context. Consider tying the request to a user action instead. Learn more.\rAvoids requesting the notification permission on page load\rUsers are mistrustful of or confused by sites that request to send notifications without context. Consider tying the request to user gestures instead. Learn more.\rAvoids front-end JavaScript libraries with known security vulnerabilities\rSome third-party scripts may contain known security vulnerabilities that are easily identified and exploited by attackers. Learn more.\rAllows users to paste into password fields\rPreventing password pasting undermines good security policy. Learn more.\rDisplays images with correct aspect ratio\rImage display dimensions should match natural aspect ratio. Learn more.\rServes images with appropriate resolution\rImage natural dimensions should be proportional to the display size and the pixel ratio to maximize image clarity. Learn more.\rPage has the HTML doctype\rSpecifying a doctype prevents the browser from switching to quirks-mode. Learn more.\rProperly defines charset\rA character encoding declaration is required. It can be done with a `\u0026lt;meta\u0026gt;` tag in the first 1024 bytes of the HTML or in the Content-Type HTTP response header. Learn more.\rAvoids unload event listeners\rThe `unload` event does not fire reliably and listening for it can prevent browser optimizations like the Back-Forward Cache. Consider using the `pagehide` or `visibilitychange` events instead. Learn more\rAvoids Application Cache\rApplication Cache is deprecated. Learn more.\rDetected JavaScript libraries\rAll front-end JavaScript libraries detected on the page. Learn more.\rNameVersionFuseJS\rAvoids deprecated APIs\rDeprecated APIs will eventually be removed from the browser. Learn more.\rNo browser errors logged to the console\rErrors logged to the console indicate unresolved problems. They can come from network request failures and other browser concerns. Learn more\rPage has valid source maps\rSource maps translate minified code to the original source code. This helps developers debug in production. In addition, Lighthouse is able to provide further insights. Consider deploying source maps to take advantage of these benefits. Learn more.\rNo issues in the Issues panel in Chrome Devtools\rIssues logged to the `Issues` panel in Chrome Devtools indicate unresolved problems. They can come from network request failures, insufficient security controls, and other browser concerns. Open up the Issues panel in Chrome DevTools for more details on each issue.\rNot applicable\r(1)\rFonts with font-display: optional are preloaded\rPreload `optional` fonts so first-time visitors may use them. Learn more\r100\rSEO\rThese checks ensure that your page is optimized for search engine results ranking. There are additional factors Lighthouse does not check that may affect your search ranking. Learn more.\rAdditional items to manually check\r(1)\rRun these additional validators on your site to check additional SEO best practices.\rStructured data is valid\rRun the Structured Data Testing Tool and the Structured Data Linter to validate structured data. Learn more.\rPassed audits\r(13)\rHas a \u0026lt;meta name=\"viewport\"\u0026gt; tag with width or initial-scale\rAdd a `\u0026lt;meta name=\"viewport\"\u0026gt;` tag to optimize your app for mobile screens. Learn more.\rDocument has a \u0026lt;title\u0026gt; element\rThe title gives screen reader users an overview of the page, and search engine users rely on it heavily to determine if a page is relevant to their search. Learn more.\rDocument has a meta description\rMeta descriptions may be included in search results to concisely summarize page content. Learn more.\rPage has successful HTTP status code\rPages with unsuccessful HTTP status codes may not be indexed properly. Learn more.\rLinks have descriptive text\rDescriptive link text helps search engines understand your content. Learn more.\rLinks are crawlable\rSearch engines may use `href` attributes on links to crawl websites. Ensure that the `href` attribute of anchor elements links to an appropriate destination, so more pages of the site can be discovered. Learn More\rPage isn’t blocked from indexing\rSearch engines are unable to include your pages in search results if they don't have permission to crawl them. Learn more.\rImage elements have [alt] attributes\rInformative elements should aim for short, descriptive alternate text. Decorative elements can be ignored with an empty alt attribute. Learn more.\rDocument has a valid hreflang\rhreflang links tell search engines what version of a page they should list in search results for a given language or region. Learn more.\rDocument has a valid rel=canonical\rCanonical links suggest which URL to show in search results. Learn more.\rDocument uses legible font sizes\r99.75% legible text\rFont sizes less than 12px are too small to be legible and require mobile visitors to “pinch to zoom” in order to read. Strive to have \u0026gt;60% of page text ≥12px. Learn more.\rShow 3rd-party resources (0)\rSourceSelector% of Page TextFont Size…css/main.bundle.min.6783e34….css:1:28538(localhost).text-\\[0\\.6rem\\]0.25%9.6pxLegible text99.75%≥ 12px\rDocument avoids plugins\rSearch engines can't index plugin content, and many devices restrict plugins or don't support them. Learn more.\rTap targets are sized appropriately\r100% appropriately sized tap targets\rInteractive elements like buttons and links should be large enough (48x48px), and have enough space around them, to be easy enough to tap without overlapping onto other elements. Learn more.\rNot applicable\r(1)\rrobots.txt is valid\rIf your robots.txt file is malformed, crawlers may not be able to understand how you want your website to be crawled or indexed. Learn more.\rProgressive Web App\rThese checks validate the aspects of a Progressive Web App. Learn more.\rInstallable\rWeb app manifest and service worker meet the installability requirements\rService worker is the technology that enables your app to use many Progressive Web App features, such as offline, add to homescreen, and push notifications. With proper service worker and manifest implementations, browsers can proactively prompt users to add your app to their homescreen, which can lead to higher engagement. Learn more.\rPWA Optimized\rDoes not register a service worker that controls page and start_url\rThe service worker is the technology that enables your app to use many Progressive Web App features, such as offline, add to homescreen, and push notifications. Learn more.\rRedirects HTTP traffic to HTTPS\rIf you've already set up HTTPS, make sure that you redirect all HTTP traffic to HTTPS in order to enable secure web features for all your users. Learn more.\rConfigured for a custom splash screen\rA themed splash screen ensures a high-quality experience when users launch your app from their homescreens. Learn more.\rDoes not set a theme color for the address bar.Failures: No `\u0026lt;meta name=\"theme-color\"\u0026gt;` tag found.\rThe browser address bar can be themed to match your site. Learn more.\rContent is sized correctly for the viewport\rIf the width of your app's content doesn't match the width of the viewport, your app might not be optimized for mobile screens. Learn more.\rHas a \u0026lt;meta name=\"viewport\"\u0026gt; tag with width or initial-scale\rAdd a `\u0026lt;meta name=\"viewport\"\u0026gt;` tag to optimize your app for mobile screens. Learn more.\rProvides a valid apple-touch-icon\rFor ideal appearance on iOS when users add a progressive web app to the home screen, define an `apple-touch-icon`. It must point to a non-transparent 192px (or 180px) square PNG. Learn More.\rManifest has a maskable icon\rA maskable icon ensures that the image fills the entire shape without being letterboxed when installing the app on a device. Learn more.\rAdditional items to manually check\r(3)\rThese checks are required by the baseline PWA Checklist but are not automatically checked by Lighthouse. They do not affect your score but it's important that you verify them manually.\rSite works cross-browser\rTo reach the most number of users, sites should work across every major browser. Learn more.\rPage transitions don't feel like they block on the network\rTransitions should feel snappy as you tap around, even on a slow network. This experience is key to a user's perception of performance. Learn more.\rEach page has a URL\rEnsure individual pages are deep linkable via URL and that URLs are unique for the purpose of shareability on social media. Learn more.\rRuntime Settings\rURL\rhttp://localhost:8008/congo/samples/emoji/\rFetch Time\rJan 19, 2022, 7:17 PM GMT+11\rDevice\rEmulated Moto G4\rNetwork throttling\r150\u0026nbsp;ms TCP RTT, 1,638.4\u0026nbsp;Kbps throughput (Simulated)\rCPU throttling\r4x slowdown (Simulated)\rChannel\rcli\rUser agent (host)\rMozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/96.0.4664.110 Safari/537.36\rUser agent (network)\rMozilla/5.0 (Linux; Android 7.0; Moto G (4)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4420.0 Mobile Safari/537.36 Chrome-Lighthouse\rCPU/Memory Power\r1949\rAxe version\r4.2.1\rGenerated by Lighthouse 8.0.0 |\rFile an issue\r","date":"1 January 0001","permalink":"/docs/version-2/lighthouse/","section":"Documentation","summary":"","title":""}]